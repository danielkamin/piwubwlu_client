[{"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\index.tsx":"1","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\reportWebVitals.ts":"2","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\App.tsx":"3","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\Router.tsx":"4","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\AdminSwitch.tsx":"5","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\MainSwitch.tsx":"6","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\index.ts":"7","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\utils\\api\\accessToken.ts":"8","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\context\\UserContext.tsx":"9","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\context\\AlertContext.tsx":"10","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\Routes\\ProtectedRoute.tsx":"11","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\Routes\\AdminRoute.tsx":"12","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\Routes\\NotFound.tsx":"13","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Layouts\\Main\\Profile.tsx":"14","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Layouts\\Main\\index.tsx":"15","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Layouts\\Admin\\index.tsx":"16","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Auth\\Logout\\logout.ts":"17","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\utils\\constants.ts":"18","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\assets\\Styles\\theme.tsx":"19","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\styles.tsx":"20","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\utils\\api\\customAxios.ts":"21","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\Reservations\\ReservationSurvey.tsx":"22","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Shared\\Admin\\Nav\\index.tsx":"23","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Shared\\Main\\Footer\\index.tsx":"24","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Shared\\Main\\Nav\\index.tsx":"25","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\Reservations\\index.tsx":"26","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Machines\\index.tsx":"27","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Workshops\\index.tsx":"28","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Labs\\index.tsx":"29","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Employees\\index.tsx":"30","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\api\\index.ts":"31","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\UpdateProfile\\index.tsx":"32","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\DeleteAccount\\index.tsx":"33","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\ChangePassword\\index.tsx":"34","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\PrivacyPolicy\\index.tsx":"35","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Auth\\ResetPassword\\index.tsx":"36","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Auth\\RequestNewPassword\\index.tsx":"37","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Auth\\Register\\index.tsx":"38","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Auth\\Login\\index.tsx":"39","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Home\\index.tsx":"40","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Shared\\Main\\Nav\\Links.tsx":"41","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Shared\\Admin\\Nav\\Links.tsx":"42","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\Reservations\\Parts\\ReservationsTable.tsx":"43","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\ResourceDetails\\Workshop\\index.tsx":"44","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\ResourceDetails\\Reservation\\index.tsx":"45","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\ResourceDetails\\Machine\\index.tsx":"46","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\ResourceDetails\\Lab\\index.tsx":"47","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Employees\\table.tsx":"48","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Labs\\MyCard.tsx":"49","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\schemas.ts":"50","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Display\\PageTitle.tsx":"51","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\styles.tsx":"52","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Display\\TokenExpired.tsx":"53","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Inputs\\MyTextField.tsx":"54","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Inputs\\MyCheckBox.tsx":"55","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Home\\styles.tsx":"56","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\types.ts":"57","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Home\\Parts\\Cards.tsx":"58","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Home\\Parts\\Banner.tsx":"59","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\Reservations\\Parts\\RentAction.tsx":"60","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\styles.tsx":"61","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Modal\\DeleteModal.tsx":"62","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\schemas.ts":"63","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Home\\Parts\\HomeCard.tsx":"64","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Inputs\\MyDateTimePicker.tsx":"65","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Inputs\\MyTextArea.tsx":"66","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Groups\\SortData.tsx":"67","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Reservation\\ReservationList.tsx":"68","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Employee\\EmployeeList.tsx":"69","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Guest\\GuestList.tsx":"70","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Display\\MyCard.tsx":"71","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\index.tsx":"72","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\ResourceDetails\\Employee\\index.tsx":"73","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Lab\\index.tsx":"74","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Workshop\\index.tsx":"75","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Department\\index.tsx":"76","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\WorkshopType\\index.tsx":"77","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Machine\\index.tsx":"78","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Workshop\\index.tsx":"79","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\WorkshopType\\index.tsx":"80","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Machine\\index.tsx":"81","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Groups\\MyButtonGroup.tsx":"82","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Lab\\index.tsx":"83","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Guest\\index.tsx":"84","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Employee\\index.tsx":"85","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Department\\index.tsx":"86","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Auth\\index.tsx":"87","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\WorkshopType\\index.tsx":"88","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\Machine\\index.tsx":"89","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\Department\\index.tsx":"90","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\Workshop\\index.tsx":"91","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\Lab\\index.tsx":"92","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\schemas.ts":"93","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Machine\\MachineList.tsx":"94","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\styles.tsx":"95","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Buttons\\ImageUploadButton.tsx":"96","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Buttons\\NewResourceButton.tsx":"97","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\WorkshopType\\WorkshopTypeList.tsx":"98","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Department\\DepartmentList.tsx":"99","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Workshop\\WorkshopList.tsx":"100","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Lab\\LabList.tsx":"101","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Groups\\Pagination.tsx":"102","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Groups\\SearchData.tsx":"103","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Search\\index.tsx":"104","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Search\\SearchBar.tsx":"105","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Search\\SearchCard.tsx":"106","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Degree\\index.tsx":"107","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\Degree\\index.tsx":"108","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Degree\\index.tsx":"109","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Degree\\DegreeList.tsx":"110","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\ProfileCalendar.js":"111","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\constants.js":"112","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\WorkshopCalendar.js":"113","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\MachineCalendar.js":"114","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\helpers.js":"115","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\UpdateResCalendar.jsx":"116"},{"size":449,"mtime":1614267803145,"results":"117","hashOfConfig":"118"},{"size":425,"mtime":499162500000,"results":"119","hashOfConfig":"118"},{"size":936,"mtime":1614903458818,"results":"120","hashOfConfig":"118"},{"size":7375,"mtime":1615304795949,"results":"121","hashOfConfig":"118"},{"size":3692,"mtime":1613437601753,"results":"122","hashOfConfig":"118"},{"size":3150,"mtime":1613430023300,"results":"123","hashOfConfig":"118"},{"size":3650,"mtime":1613998479728,"results":"124","hashOfConfig":"118"},{"size":550,"mtime":1605457979874,"results":"125","hashOfConfig":"118"},{"size":793,"mtime":1613054470466,"results":"126","hashOfConfig":"118"},{"size":2424,"mtime":1613054402142,"results":"127","hashOfConfig":"118"},{"size":883,"mtime":1613434748509,"results":"128","hashOfConfig":"118"},{"size":636,"mtime":1613059437849,"results":"129","hashOfConfig":"118"},{"size":194,"mtime":1612277843382,"results":"130","hashOfConfig":"118"},{"size":1414,"mtime":1613055631869,"results":"131","hashOfConfig":"118"},{"size":1068,"mtime":1614939316351,"results":"132","hashOfConfig":"118"},{"size":1346,"mtime":1613052277202,"results":"133","hashOfConfig":"118"},{"size":463,"mtime":1612532083762,"results":"134","hashOfConfig":"118"},{"size":469,"mtime":1613779874557,"results":"135","hashOfConfig":"118"},{"size":665,"mtime":1612396322650,"results":"136","hashOfConfig":"118"},{"size":1042,"mtime":1613055631796,"results":"137","hashOfConfig":"118"},{"size":1108,"mtime":1613436029170,"results":"138","hashOfConfig":"118"},{"size":2572,"mtime":1612539893555,"results":"139","hashOfConfig":"118"},{"size":3186,"mtime":1613053059209,"results":"140","hashOfConfig":"118"},{"size":1681,"mtime":1615239639860,"results":"141","hashOfConfig":"118"},{"size":1613,"mtime":1615290874761,"results":"142","hashOfConfig":"118"},{"size":2141,"mtime":1615305586444,"results":"143","hashOfConfig":"118"},{"size":2489,"mtime":1615293855069,"results":"144","hashOfConfig":"118"},{"size":2537,"mtime":1615293855069,"results":"145","hashOfConfig":"118"},{"size":1096,"mtime":1615300519998,"results":"146","hashOfConfig":"118"},{"size":4014,"mtime":1615366364588,"results":"147","hashOfConfig":"118"},{"size":3067,"mtime":1613493590456,"results":"148","hashOfConfig":"118"},{"size":5407,"mtime":1615378265920,"results":"149","hashOfConfig":"118"},{"size":2690,"mtime":1615305086428,"results":"150","hashOfConfig":"118"},{"size":2490,"mtime":1615305086427,"results":"151","hashOfConfig":"118"},{"size":440,"mtime":1612528902667,"results":"152","hashOfConfig":"118"},{"size":3159,"mtime":1612528721857,"results":"153","hashOfConfig":"118"},{"size":2410,"mtime":1612527788454,"results":"154","hashOfConfig":"118"},{"size":3459,"mtime":1615291362267,"results":"155","hashOfConfig":"118"},{"size":2890,"mtime":1615291362324,"results":"156","hashOfConfig":"118"},{"size":400,"mtime":1615242755882,"results":"157","hashOfConfig":"118"},{"size":4554,"mtime":1615304397689,"results":"158","hashOfConfig":"118"},{"size":3244,"mtime":1613998480020,"results":"159","hashOfConfig":"118"},{"size":4209,"mtime":1613428186484,"results":"160","hashOfConfig":"118"},{"size":3444,"mtime":1615337136219,"results":"161","hashOfConfig":"118"},{"size":3720,"mtime":1614902831976,"results":"162","hashOfConfig":"118"},{"size":2460,"mtime":1615337136221,"results":"163","hashOfConfig":"118"},{"size":2259,"mtime":1615332364589,"results":"164","hashOfConfig":"118"},{"size":1620,"mtime":1614075189403,"results":"165","hashOfConfig":"118"},{"size":867,"mtime":1615300641038,"results":"166","hashOfConfig":"118"},{"size":2282,"mtime":1613999449903,"results":"167","hashOfConfig":"118"},{"size":322,"mtime":1615293751533,"results":"168","hashOfConfig":"118"},{"size":1166,"mtime":1615291312784,"results":"169","hashOfConfig":"118"},{"size":727,"mtime":1612963315024,"results":"170","hashOfConfig":"118"},{"size":532,"mtime":1606693931674,"results":"171","hashOfConfig":"118"},{"size":619,"mtime":1612963506530,"results":"172","hashOfConfig":"118"},{"size":131,"mtime":1604615873244,"results":"173","hashOfConfig":"118"},{"size":1699,"mtime":1615366364126,"results":"174","hashOfConfig":"118"},{"size":971,"mtime":1615280997656,"results":"175","hashOfConfig":"118"},{"size":597,"mtime":1612528830308,"results":"176","hashOfConfig":"118"},{"size":542,"mtime":1613408102948,"results":"177","hashOfConfig":"118"},{"size":1151,"mtime":1615300998885,"results":"178","hashOfConfig":"118"},{"size":1546,"mtime":1612968813574,"results":"179","hashOfConfig":"118"},{"size":227,"mtime":1612966101542,"results":"180","hashOfConfig":"118"},{"size":740,"mtime":1615250347024,"results":"181","hashOfConfig":"118"},{"size":763,"mtime":1605908729098,"results":"182","hashOfConfig":"118"},{"size":532,"mtime":1615333850162,"results":"183","hashOfConfig":"118"},{"size":1820,"mtime":1615280621740,"results":"184","hashOfConfig":"118"},{"size":2406,"mtime":1612486750393,"results":"185","hashOfConfig":"118"},{"size":2321,"mtime":1614265639647,"results":"186","hashOfConfig":"118"},{"size":2346,"mtime":1614265639646,"results":"187","hashOfConfig":"118"},{"size":1759,"mtime":1612956445638,"results":"188","hashOfConfig":"118"},{"size":270,"mtime":1612308023141,"results":"189","hashOfConfig":"118"},{"size":4723,"mtime":1615377978795,"results":"190","hashOfConfig":"118"},{"size":413,"mtime":1613117797894,"results":"191","hashOfConfig":"118"},{"size":438,"mtime":1613117881786,"results":"192","hashOfConfig":"118"},{"size":450,"mtime":1612486836123,"results":"193","hashOfConfig":"118"},{"size":468,"mtime":1613117885409,"results":"194","hashOfConfig":"118"},{"size":459,"mtime":1613117804175,"results":"195","hashOfConfig":"118"},{"size":8074,"mtime":1614094716519,"results":"196","hashOfConfig":"118"},{"size":3434,"mtime":1613497212947,"results":"197","hashOfConfig":"118"},{"size":6184,"mtime":1614094716520,"results":"198","hashOfConfig":"118"},{"size":1013,"mtime":1612963393742,"results":"199","hashOfConfig":"118"},{"size":3922,"mtime":1613498909096,"results":"200","hashOfConfig":"118"},{"size":4261,"mtime":1613496331040,"results":"201","hashOfConfig":"118"},{"size":6335,"mtime":1614096823476,"results":"202","hashOfConfig":"118"},{"size":3204,"mtime":1613497690845,"results":"203","hashOfConfig":"118"},{"size":2951,"mtime":1613524770876,"results":"204","hashOfConfig":"118"},{"size":2588,"mtime":1613497212948,"results":"205","hashOfConfig":"118"},{"size":5690,"mtime":1615333746195,"results":"206","hashOfConfig":"118"},{"size":2464,"mtime":1613497690845,"results":"207","hashOfConfig":"118"},{"size":7692,"mtime":1614094663063,"results":"208","hashOfConfig":"118"},{"size":3299,"mtime":1615307947473,"results":"209","hashOfConfig":"118"},{"size":2720,"mtime":1615377144818,"results":"210","hashOfConfig":"118"},{"size":2769,"mtime":1615377316173,"results":"211","hashOfConfig":"118"},{"size":692,"mtime":1612440386894,"results":"212","hashOfConfig":"118"},{"size":751,"mtime":1612274533925,"results":"213","hashOfConfig":"118"},{"size":623,"mtime":1612956176926,"results":"214","hashOfConfig":"118"},{"size":2488,"mtime":1612487073359,"results":"215","hashOfConfig":"118"},{"size":2196,"mtime":1614265598073,"results":"216","hashOfConfig":"118"},{"size":2784,"mtime":1614265796849,"results":"217","hashOfConfig":"118"},{"size":2548,"mtime":1615308210415,"results":"218","hashOfConfig":"118"},{"size":891,"mtime":1613611989561,"results":"219","hashOfConfig":"118"},{"size":986,"mtime":1615278132277,"results":"220","hashOfConfig":"118"},{"size":3129,"mtime":1615336529561,"results":"221","hashOfConfig":"118"},{"size":607,"mtime":1615278132306,"results":"222","hashOfConfig":"118"},{"size":323,"mtime":1613738897706,"results":"223","hashOfConfig":"118"},{"size":425,"mtime":1613998821541,"results":"224","hashOfConfig":"118"},{"size":2285,"mtime":1613998825410,"results":"225","hashOfConfig":"118"},{"size":2952,"mtime":1613998597132,"results":"226","hashOfConfig":"118"},{"size":2101,"mtime":1614265614839,"results":"227","hashOfConfig":"118"},{"size":1675,"mtime":1614812498642,"results":"228","hashOfConfig":"118"},{"size":753,"mtime":1615332657531,"results":"229","hashOfConfig":"118"},{"size":2243,"mtime":1614805353596,"results":"230","hashOfConfig":"118"},{"size":5304,"mtime":1615334563457,"results":"231","hashOfConfig":"118"},{"size":1333,"mtime":1614903921796,"results":"232","hashOfConfig":"118"},{"size":5443,"mtime":1615335281014,"results":"233","hashOfConfig":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},"2yccz6",{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"236"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"236"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"236"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"236"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"236"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"236"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"236"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"236"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"236"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"236"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"236"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"236"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"236"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"236"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"236"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"236"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"236"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"236"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"236"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"236"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"236"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"236"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"236"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"236"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"236"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"236"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"381"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"390"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"236"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"236"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"409"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"236"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"236"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"236"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"236"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"236"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"236"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"236"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"236"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"236"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"236"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"236"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"236"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"236"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"236"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"236"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"495"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"236"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"508"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"508"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"508"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"508"},"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\index.tsx",[],["522","523"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\reportWebVitals.ts",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\App.tsx",["524"],"import React, { useEffect, useState } from 'react';\nimport { setAccessToken, setRoles } from './utils/api/accessToken';\nimport './assets/Styles/app.css';\nimport Router from './Router/Router';\nimport customAxios from './utils/api/customAxios';\nimport { API_URL } from './utils/constants';\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  useEffect(() => {\n    initAppResources();\n  }, []);\n  async function refreshToken() {\n    await customAxios\n      .post(API_URL + '/auth/refresh_token')\n      .then((res: any) => {\n        setAccessToken(res.data.accessToken);\n        setRoles(res.data.accessToken);\n      })\n      .catch((err: any) => {\n        console.error(err);\n      });\n  }\n  const initAppResources = async (): Promise<void> => {\n    await refreshToken();\n    setLoading(false);\n  };\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  return <Router />;\n};\n\nexport default App;\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\Router.tsx",["525","526","527","528"],"import React from 'react';\r\nimport {\r\n  ReadDepartments,\r\n  ReadEmployees,\r\n  ReadGuests,\r\n  ReadLabs,\r\n  ReadMachines,\r\n  ReadReservations,\r\n  ReadWorkshopTypes,\r\n  ReadWorkshops,\r\n  NewDepartment,\r\n  NewLab,\r\n  NewMachine,\r\n  NewWorkshop,\r\n  NewWorkshopType,\r\n  UpdateDepartment,\r\n  UpdateEmployee,\r\n  UpdateGuest,\r\n  UpdateLab,\r\n  UpdateMachine,\r\n  UpdateWorkshop,\r\n  UpdateWorkshopType,\r\n  AdminHome,\r\n  AdminLogin,\r\n  HomePage,\r\n  Login,\r\n  Register,\r\n  RequestNewPassword,\r\n  ResetPassword,\r\n  PrivacyPolicy,\r\n  UpdateProfile,\r\n  ChangePassword,\r\n  MyReservations,\r\n  DeleteAccount,\r\n  Labs,\r\n  Machines,\r\n  Workshops,\r\n  Employees,\r\n  EmployeeDetails,\r\n  LabDetails,\r\n  MachineDetails,\r\n  WorkshopDetails,\r\n  ReservationDetails,\r\n  ReservationSurvey,\r\n  ResourceSearch,\r\n  NewDegree,\r\n  ReadDegrees,\r\n  UpdateDegree\r\n} from '../components/index';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { getAccessToken, getRoles } from '../utils/api/accessToken';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport AdminLayout from '../containers/Layouts/Admin';\r\nimport MainLayout from '../containers/Layouts/Main';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { UserProvider } from '../context/UserContext';\r\nimport { AlertProvider, AlertType } from '../context/AlertContext';\r\nimport AdminRoute from './Routes/AdminRoute';\r\nimport ProtectedRoute from './Routes/ProtectedRoute';\r\nimport Unauthorized from './Routes/Unauthorized';\r\nimport plLocale from 'date-fns/locale/pl';\r\nimport AdminSwitch from './AdminSwitch';\r\nimport MainSwitch from './MainSwitch';\r\nimport NotFound from './Routes/NotFound';\r\nimport ProfileLayout from '../containers/Layouts/Main/Profile';\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={plLocale}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/admin/:path?/:id?' exact>\r\n            <AlertProvider defaultValue={{ isOpen: false, type: AlertType.error, message: '' }}>\r\n              <UserProvider defaultValue={{ loggedIn: getAccessToken() === '' ? false : true, roles: getRoles() }}>\r\n                <AdminLayout>\r\n                  <Switch>\r\n                    <AdminRoute path='/admin' exact component={AdminHome} />\r\n                    <Route path='/admin/login' exact component={AdminLogin} />\r\n                    <AdminRoute path='/admin/workshops' exact component={ReadWorkshops} />\r\n                    <AdminRoute path='/admin/new_workshop' exact component={NewWorkshop} />\r\n                    <AdminRoute path='/admin/update_workshop/:id' exact component={UpdateWorkshop} />\r\n                    <AdminRoute path='/admin/labs' exact component={ReadLabs} />\r\n                    <AdminRoute path='/admin/new_lab' exact component={NewLab} />\r\n                    <AdminRoute path='/admin/update_lab/:id' exact component={UpdateLab} />\r\n                    <AdminRoute path='/admin/employees' exact component={ReadEmployees} />\r\n                    <AdminRoute path='/admin/machines' exact component={ReadMachines} />\r\n                    <AdminRoute path='/admin/new_machine' exact component={NewMachine} />\r\n                    <AdminRoute path='/admin/update_machine/:id' exact component={UpdateMachine} />\r\n                    <AdminRoute path='/admin/workshop_types' exact component={ReadWorkshopTypes} />\r\n                    <AdminRoute path='/admin/new_workshop_type' exact component={NewWorkshopType} />\r\n                    <AdminRoute path='/admin/update_workshop_type/:id' exact component={UpdateWorkshopType} />\r\n                    <AdminRoute path='/admin/departments' exact component={ReadDepartments} />\r\n                    <AdminRoute path='/admin/update_department/:id' exact component={UpdateDepartment} />\r\n                    <AdminRoute path='/admin/new_department' exact component={NewDepartment} />\r\n                    <AdminRoute path='/admin/new_degree' exact component={NewDegree} />\r\n                    <AdminRoute path='/admin/degrees' exact component={ReadDegrees} />\r\n                    <AdminRoute path='/admin/update_degree/:id' exact component={UpdateDegree} />\r\n                    <AdminRoute path='/admin/guests' exact component={ReadGuests} />\r\n                    <AdminRoute path='/admin/update_guest/:id' component={UpdateGuest} />\r\n                    <AdminRoute path='/admin/update_employee/:id' component={UpdateEmployee} />\r\n                    <AdminRoute path='/admin/machine/:id' exact component={MachineDetails} />\r\n                    <AdminRoute path='/admin/workshop/:id' exact component={WorkshopDetails} />\r\n                    <AdminRoute path='/admin/reservation/:id' exact component={ReservationDetails} />\r\n                    <AdminRoute path='/admin/lab/:id' exact component={LabDetails} />\r\n                    <AdminRoute path='/admin/reservations' exact component={ReadReservations} />\r\n                  </Switch>\r\n                </AdminLayout>\r\n              </UserProvider>\r\n            </AlertProvider>\r\n          </Route>\r\n          <Route>\r\n            <AlertProvider defaultValue={{ isOpen: false, type: AlertType.error, message: '' }}>\r\n              <UserProvider defaultValue={{ loggedIn: getAccessToken() === '' ? false : true, roles: getRoles() }}>\r\n                <MainLayout>\r\n                  <Switch>\r\n                    <Route path='/' exact component={HomePage} />\r\n                    <Route path='/login' component={Login} />\r\n                    <ProtectedRoute path='/moje_konto' exact component={UpdateProfile} />\r\n                    <ProtectedRoute path='/moje_konto/zmiana_hasla' component={ChangePassword} />\r\n                    <ProtectedRoute path='/moje_konto/rezerwacje' component={MyReservations} />\r\n                    <ProtectedRoute path='/moje_konto/usun_konto' component={DeleteAccount} />\r\n\r\n                    <Route path='/rejestracja' component={Register} />\r\n                    <Route path='/regulamin' component={PrivacyPolicy} />\r\n                    <Route path='/nowe_haslo/:token' component={ResetPassword} />\r\n                    <Route path='/reset_hasla' component={RequestNewPassword} />\r\n                    <Route path='/laboratoria' exact component={Labs} />\r\n                    <Route path='/laboratoria/:id' component={LabDetails} />\r\n                    <Route path='/maszyny' exact component={Machines} />\r\n                    <Route path='/maszyny/:id' component={MachineDetails} />\r\n                    <Route path='/pracownie' exact component={Workshops} />\r\n                    <Route path='/pracownie/:id' component={WorkshopDetails} />\r\n                    <Route path='/kadra' exact component={Employees} />\r\n                    <Route path='/kadra/:id' component={EmployeeDetails} />\r\n                    <Route path='/szukaj' component={ResourceSearch} />\r\n                    <ProtectedRoute path='/rezerwacje/:id' exact component={ReservationDetails} />\r\n                    <ProtectedRoute path='/rezerwacje/:id/ankieta' component={ReservationSurvey} />\r\n                    <Route component={NotFound} />\r\n                  </Switch>\r\n                </MainLayout>\r\n              </UserProvider>\r\n            </AlertProvider>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\nexport default Routes;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\AdminSwitch.tsx",["529"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\MainSwitch.tsx",["530"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\index.ts",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\utils\\api\\accessToken.ts",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\context\\UserContext.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\context\\AlertContext.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\Routes\\ProtectedRoute.tsx",["531","532","533","534"],"import React from 'react';\r\nimport { getAccessToken, getRoles } from '../../utils/api/accessToken';\r\nimport { logout } from '../../components/Main/Auth/Logout/logout';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useUserContext } from '../../context/UserContext';\r\nimport { AlertType, useAlertContext } from '../../context/AlertContext';\r\ninterface Props {\r\n  component: React.FC;\r\n  path: string;\r\n  exact?: boolean;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<Props> = (props) => {\r\n  const context = useUserContext();\r\n  const alertContext = useAlertContext();\r\n  if (context?.loggedIn === false) {\r\n    logout();\r\n    context.changeState(false, []);\r\n    // alertContext.openAlert(AlertType.warning, 'Nieautoryzowany dostęp! Spróbuj się zalogować');\r\n    return <Redirect to='/login' />;\r\n  }\r\n  return <Route {...props} />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\Routes\\AdminRoute.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\Router\\Routes\\NotFound.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Layouts\\Main\\Profile.tsx",[],["535","536"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Layouts\\Main\\index.tsx",["537","538","539"],"import React from 'react';\r\nimport Nav from '../../Shared/Main/Nav';\r\nimport { makeStyles, Theme, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Footer from '../../Shared/Main/Footer';\r\nimport { useUserContext } from '../../../context/UserContext';\r\nimport CustomTheme from '../../../assets/Styles/theme';\r\ninterface Props {\r\n  children?: any;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto'\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst MainLayout: React.FC<Props> = ({ children }) => {\r\n  const classes = useStyles();\r\n  const context = useUserContext();\r\n  return (\r\n    <ThemeProvider theme={CustomTheme}>\r\n      <Nav />\r\n      <main className='main-container'>\r\n        <div className='container'>{children}</div>\r\n      </main>\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Layouts\\Admin\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Auth\\Logout\\logout.ts",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\utils\\constants.ts",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\assets\\Styles\\theme.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\styles.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\utils\\api\\customAxios.ts",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\Reservations\\ReservationSurvey.tsx",["540","541"],"import React, { useEffect, useState } from 'react';\r\nimport { postData, getData } from '../../../../api/index';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Container, Button, Paper, CircularProgress } from '@material-ui/core';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport { Params } from '../../../../utils/types';\r\n\r\nconst ReservationSurvey: React.FC = () => {\r\n  const { id } = useParams<Params>();\r\n  const [loading, setLoading] = useState(true);\r\n  const alertContext = useAlertContext();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    checkReservationOwner();\r\n  }, []);\r\n  const checkReservationOwner = async () => {\r\n    const res = await getData(`rental/${id}/survey`, getAccessToken())\r\n      .then((res) => {\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        alertContext.openAlert(AlertType.warning, 'Nie możessz wypełnić tej ankiety!');\r\n        history.push(`/rezerwacje/${id}`);\r\n      });\r\n  };\r\n  const sendSurvey = async (data: any) => {\r\n    await postData(`rental/${id}/survey`, getAccessToken(), data)\r\n      .then((res) => {\r\n        alertContext.openAlert(AlertType.success, 'Dziękujemy za przesłanie ankiety');\r\n      })\r\n      .catch((err) => {\r\n        alertContext.openAlert(AlertType.error, err.data);\r\n      });\r\n    history.push(`/rezerwacje/${id}`);\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Container maxWidth='md'>\r\n      <div className='container-spacing'>\r\n        <Paper>\r\n          <Container maxWidth='xs'>\r\n            <Formik\r\n              initialValues={{ comment: '' }}\r\n              onSubmit={(data, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                sendSurvey(data);\r\n                setSubmitting(false);\r\n              }}\r\n            >\r\n              {({ values, isSubmitting }) => (\r\n                <Form style={{ display: 'grid' }}>\r\n                  <Field name='comment' component='textarea' placeholder='Komentarz' rows='5' />\r\n                  <Button type='submit' variant='contained' color='primary' disabled={isSubmitting}>\r\n                    Prześlij Ankietę\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Container>\r\n        </Paper>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReservationSurvey;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Shared\\Admin\\Nav\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Shared\\Main\\Footer\\index.tsx",["542"],"import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { API_URL } from '../../../../utils/constants';\r\nimport instagram from '../../../../assets/Images/PB_socialicon_instagram.png';\r\nimport facebook from '../../../../assets/Images/PB_socialicon_fb.png';\r\nimport youtube from '../../../../assets/Images/PB_socialicon_youtube.png';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <div className='footer'>\r\n      <div className='content'>\r\n        <Typography variant='h5'>Politechnika Białostocka</Typography>\r\n        <Typography variant='body1'>\r\n          ul. Wiejska 45A, 15-351 Białystok<br></br>\r\n          tel. 85 746 90 00 (centrala), fax 85 746 90 15<br></br>\r\n          REGON: 000001672, NIP: 542-020-87-21\r\n        </Typography>\r\n        <div className='socials'>\r\n          <a title='przejdź do facebook PB' href='https://pl-pl.facebook.com/politechnikabialostocka/' target='_blank' rel='noopener noreferrer'>\r\n            <img alt='przejdź do facebook PB' src={facebook} />\r\n          </a>\r\n          <a title='przejdź do instagram PB' href='https://www.instagram.com/politechnika_bialostocka/' target='_blank' rel='noopener noreferrer'>\r\n            <img alt='przejdź do instagram PB' src={instagram} />\r\n          </a>\r\n          <a title='przejdź do youtube PB' href='https://www.youtube.com/channel/UComx9YaRB1AlVQ9tQkelQjw/' target='_blank' rel='noopener noreferrer'>\r\n            <img alt='przejdź do youtube PB' src={youtube} />\r\n          </a>\r\n        </div>\r\n        <Typography variant='caption'>Copyright © 2020 Politechnika Białostocka</Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Shared\\Main\\Nav\\index.tsx",["543","544","545"],"import React, { useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Links from './Links';\r\nimport SearchBar from '../../../../components/Main/Resources/Search/SearchBar';\r\ninterface Props {}\r\n\r\nconst Nav: React.FC<Props> = () => {\r\n  const burgerMenuRef = useRef<HTMLDivElement>(null);\r\n  const menuCollapseRef = useRef<HTMLDivElement>(null);\r\n  const toggleMenu = () => {\r\n    setHidden(!hidden);\r\n    burgerMenuRef?.current?.classList.toggle('toggle');\r\n  };\r\n  const onRedirect = () => setHidden(true);\r\n  const [hidden, setHidden] = useState(true);\r\n  return (\r\n    <header>\r\n      <div className='full-header'>\r\n        <div className='header'>\r\n          <div className='burger' onClick={toggleMenu} ref={burgerMenuRef}>\r\n            <div className='line1'></div>\r\n            <div className='line2'></div>\r\n            <div className='line3'></div>\r\n          </div>\r\n          <div className='header-logo'>\r\n            <div id='godlo' aria-label='Godło Rzeczypospolitej Polskiej'></div>\r\n            <a id='logo-pb' className='brand' href='http://pb.edu.pl' title='Strona główna serwisu Politechniki Białostockiej' aria-label='Politechnika Białostocka'></a>\r\n          </div>\r\n          <SearchBar />\r\n        </div>\r\n        <div className='header-title'>\r\n          <Link to='/'>\r\n            <span>\r\n              Platforma wynajmu urządzeń badawczych <br /> Wydziału Mechanicznego\r\n            </span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <Links hiddenMenu={hidden} onRedirect={toggleMenu} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\Reservations\\index.tsx",["546"],"import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress, Container, Typography } from '@material-ui/core';\r\nimport { Roles } from '../../../../utils/constants';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { getData } from '../../../../api';\r\nimport ReservationsTable from './Parts/ReservationsTable';\r\nimport { Reservation } from '../../types';\r\nimport { useUserContext } from '../../../../context/UserContext';\r\nimport ProfileCalendar from '../../../Shared/Calendar/ProfileCalendar';\r\nconst MyReservations: React.FC = () => {\r\n  const context = useUserContext();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [owned, setOwned] = useState<Reservation[]>(() => {\r\n    return [];\r\n  });\r\n  const [supervised, setSupervised] = useState<Reservation[] | null>(null);\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, []);\r\n  const getReservations = async () => {\r\n    const ownedReservations = await getData('rental/owned', getAccessToken());\r\n    console.log({ owned: ownedReservations });\r\n    if (context?.roles?.indexOf(Roles.supervisor) !== -1) {\r\n      const supervisedReservations = await getData('rental/supervised', getAccessToken());\r\n      console.log({ supervised: supervisedReservations });\r\n      setSupervised(supervisedReservations);\r\n    }\r\n    setOwned(ownedReservations);\r\n    setLoading(false);\r\n  };\r\n\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Container maxWidth='md' className='custom-container'>\r\n      <div>\r\n        <Typography variant='h5'>Moje wypożyczenia</Typography>\r\n        <ReservationsTable data={owned} CB={getReservations} />\r\n        {supervised != null && (\r\n          <div>\r\n            {' '}\r\n            <Typography variant='h5'>Nadzorowane</Typography>\r\n            <ReservationsTable data={supervised} supervised CB={getReservations} />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <ProfileCalendar ownedReservations={owned} supervisedReservations={supervised ? supervised : []} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyReservations;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Machines\\index.tsx",["547","548"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { getData } from '../../../../api/index';\r\nimport queryString from 'query-string';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport SortData from '../../../Shared/Groups/SortData';\r\nimport Pagination from '../../../Shared/Groups/Pagination';\r\nimport PageTitle from '../../../Shared/Display/PageTitle';\r\nimport SearchData from '../../../Shared/Groups/SearchData';\r\nimport { ICardInfo } from '../../types';\r\nconst DisplayMachines: React.FC = () => {\r\n  const history = useHistory();\r\n  const { search } = useLocation();\r\n  const query = queryString.parse(search);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [nameSearch, setNameSearch] = useState(() => {\r\n    return query.q === undefined ? '' : query.q;\r\n  });\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [elementsPerPage, setElementsPerPage] = useState(5);\r\n  const [workshops, setWorkshops] = useState<ICardInfo[]>([]);\r\n  useEffect(() => {\r\n    setNameSearch(query.q === undefined ? '' : query.q);\r\n    getWorkshops();\r\n  }, [search]);\r\n\r\n  const getWorkshops = async () => {\r\n    await getData(`machines/list${search}`, getAccessToken())\r\n      .then((res) => {\r\n        setWorkshops(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setLoading(false);\r\n  };\r\n  const searchWorkshop = (e: React.SyntheticEvent, searchValue: string | undefined) => {\r\n    e.preventDefault();\r\n    if (searchValue !== '') history.push(`/maszyny?q=${searchValue}`);\r\n    else history.push(`/maszyny`);\r\n  };\r\n  const indexOfLastPost = currentPage * elementsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - elementsPerPage;\r\n  const currentElements = workshops.slice(indexOfFirstPost, indexOfLastPost);\r\n  const paginate = (page: number) => setCurrentPage(page);\r\n\r\n  return (\r\n    <div className='custom-container'>\r\n      <PageTitle title='Urządzenia badawcze' />\r\n      <div className='custom-search'>\r\n        <SearchData searchFunction={searchWorkshop} buttonColor='black' placeholder='Wyszukaj maszynę' />\r\n      </div>\r\n      <SortData data={currentElements} sortQuery={query.sort} qQuery={nameSearch} linkString='/maszyny' loading={loading} />\r\n      <Pagination elementsPerPage={elementsPerPage} paginate={paginate} totalElements={workshops.length} currentPage={currentPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayMachines;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Workshops\\index.tsx",["549","550","551"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { getData } from '../../../../api/index';\r\nimport queryString from 'query-string';\r\nimport SortData from '../../../Shared/Groups/SortData';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport Pagination from '../../../Shared/Groups/Pagination';\r\nimport SearchData from '../../../Shared/Groups/SearchData';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { ICardInfo } from '../../types';\r\nconst DisplayWorkshops: React.FC = () => {\r\n  const history = useHistory();\r\n  const { search } = useLocation();\r\n  const query = queryString.parse(search);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [nameSearch, setNameSearch] = useState(() => {\r\n    return query.q === undefined ? '' : query.q;\r\n  });\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [elementsPerPage, setElementsPerPage] = useState(15);\r\n  const [workshops, setWorkshops] = useState<ICardInfo[]>([]);\r\n  useEffect(() => {\r\n    setNameSearch(query.q === undefined ? '' : query.q);\r\n    getWorkshops();\r\n  }, [search]);\r\n\r\n  const getWorkshops = async () => {\r\n    await getData(`workshops/list${search}`, getAccessToken())\r\n      .then((res) => {\r\n        setWorkshops(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setLoading(false);\r\n  };\r\n\r\n  const searchWorkshop = (e: React.SyntheticEvent, searchValue: string | undefined) => {\r\n    console.log(searchValue);\r\n    e.preventDefault();\r\n    if (searchValue !== '') history.push(`/pracownie?q=${searchValue}`);\r\n    else history.push('/pracownie');\r\n  };\r\n  const indexOfLastPost = currentPage * elementsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - elementsPerPage;\r\n  const currentElements = workshops.slice(indexOfFirstPost, indexOfLastPost);\r\n  const paginate = (page: number) => setCurrentPage(page);\r\n  return (\r\n    <div className='custom-container'>\r\n      <div className='custom-search'>\r\n        <SearchData searchFunction={searchWorkshop} buttonColor='black' placeholder='Wyszukaj pracownię' />\r\n      </div>\r\n      <SortData data={currentElements} sortQuery={query.sort} qQuery={nameSearch} loading={loading} linkString='/pracownie' />\r\n      <Pagination elementsPerPage={elementsPerPage} paginate={paginate} totalElements={workshops.length} currentPage={currentPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayWorkshops;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Labs\\index.tsx",["552"],"import React, { useEffect, useState } from 'react';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { getData } from '../../../../api/index';\r\nimport { Container } from '@material-ui/core';\r\nimport { ICardInfo } from '../../types';\r\nimport MyCard from './MyCard';\r\nimport PageTitle from '../../../Shared/Display/PageTitle';\r\ninterface Props {}\r\n\r\nconst DisplayLabs: React.FC<Props> = () => {\r\n  const [labs, setLabs] = useState<ICardInfo[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  useEffect(() => {\r\n    getLabs();\r\n  }, []);\r\n  const getLabs = async () => {\r\n    await getData('labs/list', getAccessToken()).then((res) => {\r\n      setLabs(res);\r\n    });\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Container maxWidth='xl'>\r\n      <PageTitle title='Laboratoria' />\r\n      <div className='labs-grid'>\r\n        {labs.map((item) => (\r\n          <MyCard link={'/laboratoria/' + item.id} name={item.name} english_name={item.english_name} key={item.id} />\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DisplayLabs;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Employees\\index.tsx",["553","554","555","556"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { getData } from '../../../../api/index';\r\nimport { TextField, Container, MenuItem, FormControl, InputLabel } from '@material-ui/core';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { IEmployee, Department, Degree } from '../../types';\r\nimport PageTitle from '../../../Shared/Display/PageTitle';\r\nimport EmployeeTable from './table';\r\ninterface IFilterValues {\r\n  Department: string;\r\n  Degree: string;\r\n}\r\nconst Employees: React.FC = () => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [initialEmployees, setInitialEmployees] = useState<IEmployee[]>([]);\r\n  const [employees, setEmployees] = useState<IEmployee[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>(() => {\r\n    return [];\r\n  });\r\n  const [degrees, setDegrees] = useState<Degree[]>(() => {\r\n    return [];\r\n  });\r\n  const [filterValues, setFilterValues] = useState<IFilterValues>({\r\n    Degree: '',\r\n    Department: ''\r\n  });\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, []);\r\n  const getEmployees = async () => {\r\n    const [empData, depData, degData] = await Promise.all([getData('employees/display', getAccessToken()), getData('departments/list', getAccessToken()), getData('degrees/list', getAccessToken())]);\r\n    setEmployees(empData);\r\n    setInitialEmployees(empData);\r\n    setDepartments(() => {\r\n      return depData;\r\n    });\r\n    setDegrees(() => {\r\n      return degData;\r\n    });\r\n    setLoading(false);\r\n  };\r\n  const filterEmployees = (newFilterValues: IFilterValues) => {\r\n    let newEmployees: IEmployee[] = initialEmployees;\r\n    Object.entries(newFilterValues).forEach((entry) => {\r\n      newEmployees = keyFiltering(entry, newEmployees);\r\n    });\r\n    setEmployees(newEmployees);\r\n  };\r\n  const keyFiltering = (entry: [string, string], filteredEmployes: IEmployee[]) => {\r\n    if (entry[1] !== '') {\r\n      return filteredEmployes.filter((emp) => {\r\n        const obcjectKey = Object.getOwnPropertyDescriptor(emp.Employee!, entry[0])?.value;\r\n        if (obcjectKey?.name !== undefined) if (obcjectKey?.name === entry[1]) return emp;\r\n      });\r\n    } else return filteredEmployes;\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Container maxWidth='md'>\r\n      <PageTitle title='Pracownicy' />\r\n      <div className='employees-form'>\r\n        <b>Wyszukaj po:</b>\r\n        <TextField\r\n          label='Katedra'\r\n          select\r\n          name='dep-filter'\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            filterEmployees({ Department: e.target.value, Degree: filterValues.Degree });\r\n            setFilterValues({ Department: e.target.value, Degree: filterValues.Degree });\r\n          }}\r\n          value={filterValues.Department}\r\n        >\r\n          <MenuItem value='' selected>\r\n            <em>Wszystko</em>\r\n          </MenuItem>\r\n          {departments.map((dep) => (\r\n            <MenuItem key={dep.id} value={dep.name}>\r\n              {dep.name}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label='Tytuł nauk.'\r\n          select\r\n          name='dep-filter'\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            filterEmployees({ Degree: e.target.value, Department: filterValues.Department });\r\n            setFilterValues({ Degree: e.target.value, Department: filterValues.Department });\r\n          }}\r\n          value={filterValues.Degree}\r\n        >\r\n          <MenuItem value=''>\r\n            <em>Wszystko</em>\r\n          </MenuItem>\r\n          {degrees.map((deg) => (\r\n            <MenuItem key={deg.id} value={deg.name}>\r\n              {deg.name}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n      <EmployeeTable Employees={employees} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\api\\index.ts",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\UpdateProfile\\index.tsx",["557"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\DeleteAccount\\index.tsx",["558"],"import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { authRoute } from '../../../../api/index';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { Button, Container, TextField, Paper, Avatar, Typography, CssBaseline } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logout } from '../../Auth/Logout/logout';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport useStyles from '../../styles';\r\nimport { NewPasswordForm } from '../../types';\r\nimport { PasswordSchema } from '../../schemas';\r\n\r\nconst DeleteAccount: React.FC = () => {\r\n  const context = useAlertContext();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const deleteAccount = async (data: NewPasswordForm) => {\r\n    await authRoute('delete_account', data, getAccessToken())\r\n      .then(async (res) => {\r\n        await logout();\r\n        context.openAlert(AlertType.success, 'Pomyślnie usunięto konto');\r\n        history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        context.openAlert(AlertType.error, err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth='sm' className='container-spacing'>\r\n      <CssBaseline />\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <DeleteForeverOutlinedIcon color='error' fontSize='large' />\r\n        <Typography component='h1' variant='h5'>\r\n          Usuń konto\r\n        </Typography>\r\n        <Typography variant='subtitle1' className='error'>\r\n          UWAGA! Proces usunięcia konta jest nieodwracalny!\r\n        </Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          validationSchema={PasswordSchema}\r\n          initialValues={{\r\n            password: '',\r\n            repeatPassword: ''\r\n          }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            deleteAccount(data);\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {({ values, isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='password' type='password' as={TextField} placeholder='Hasło' />\r\n              <MyTextField name='repeatPassword' type='password' as={TextField} placeholder='Powtórz Hasło' />\r\n              <Button variant='contained' type='submit' disabled={isSubmitting} color='primary'>\r\n                Usuń Konto\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DeleteAccount;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\ChangePassword\\index.tsx",["559"],"import { Formik, Form } from 'formik';\r\nimport { authRoute } from '../../../../api/index';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { Button, Container, TextField, Paper, Avatar, Typography, CssBaseline } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport { NewPasswordForm } from '../../types';\r\nimport { PasswordSchema } from '../../schemas';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useStyles from '../../styles';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nconst ChangePassword: React.FC = () => {\r\n  const context = useAlertContext();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const postNewPassword = async (values: NewPasswordForm) => {\r\n    await authRoute('change_password', values, getAccessToken())\r\n      .then((res) => {\r\n        context.openAlert(AlertType.success, 'Zmiana hasła przebiegła pomyślnie');\r\n      })\r\n      .catch((err) => {\r\n        context.openAlert(AlertType.error, err.data);\r\n      });\r\n    history.push('/moje_konto');\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth='sm' className='container-spacing'>\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <VpnKeyIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Zmiana Hasła\r\n        </Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          validationSchema={PasswordSchema}\r\n          initialValues={{\r\n            password: '',\r\n            repeatPassword: ''\r\n          }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            postNewPassword(data);\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {({ values, isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='password' type='password' as={TextField} placeholder='Hasło' />\r\n              <MyTextField name='repeatPassword' type='password' as={TextField} placeholder='Powtórz Hasło' />\r\n              <Button variant='contained' type='submit' disabled={isSubmitting} color='primary'>\r\n                Ustaw Nowe Hasło\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\PrivacyPolicy\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Auth\\ResetPassword\\index.tsx",["560","561"],"import React, { useState, useEffect } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { Button, TextField, Container, CssBaseline, Avatar, Typography } from '@material-ui/core';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { NewPasswordForm } from '../../types';\r\nimport { PasswordSchema } from '../../schemas';\r\nimport useStyles from '../../styles';\r\nimport customAxios from '../../../../utils/api/customAxios';\r\nimport { API_URL } from '../../../../utils/constants';\r\nimport { useParams } from 'react-router-dom';\r\nimport { authRoute } from '../../../../api/index';\r\nimport TokenExpired from '../../../Shared/Display/TokenExpired';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\ninterface Params {\r\n  token: string;\r\n}\r\n\r\nconst NewPassword: React.FC = () => {\r\n  const classes = useStyles();\r\n  const context = useAlertContext();\r\n  useEffect(() => {\r\n    getNewPassForm();\r\n  }, []);\r\n  const { token } = useParams<Params>();\r\n  const [errorMessage, setErrorMessage] = useState<boolean>(false);\r\n  const getNewPassForm = async () => {\r\n    await customAxios.get(API_URL + '/auth/new_password/' + token).catch((err) => {\r\n      setErrorMessage(true);\r\n    });\r\n  };\r\n  const newPassword = async (data: NewPasswordForm) => {\r\n    await authRoute('new_password/' + token, data)\r\n      .then((res) => context.openAlert(AlertType.info, 'Pomyślnie zmieniono hasło'))\r\n      .catch((err) => {\r\n        context.openAlert(AlertType.error, 'Coś poszło nie tak.');\r\n      });\r\n  };\r\n  if (errorMessage) return <TokenExpired message='Reset hasła wygasł. Proszę spróbować jeszcze raz.' />;\r\n\r\n  return (\r\n    <div className='black-hidden login-register'>\r\n      <img src='' className='img-cover' />\r\n      <Container component='main' maxWidth='xs' className='form'>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar src='' className={classes.avatarLarge} />\r\n          <Typography component='h1' variant='h5'>\r\n            Ustaw nowe hasło\r\n          </Typography>\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              password: '',\r\n              repeatPassword: ''\r\n            }}\r\n            validationSchema={PasswordSchema}\r\n            onSubmit={(data, { setSubmitting }) => {\r\n              setSubmitting(true);\r\n              newPassword(data);\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({ values, isSubmitting }) => (\r\n              <Form style={{ display: 'grid' }} className={classes.form}>\r\n                <MyTextField placeholder='Hasło' type='password' as={TextField} name='password' />\r\n                <MyTextField placeholder='Powtórz Hasło' type='password' as={TextField} name='repeatPassword' />\r\n                <Button type='submit' variant='contained' color='primary' disabled={isSubmitting} fullWidth className={classes.submit}>\r\n                  Nowe Hasło\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Auth\\RequestNewPassword\\index.tsx",["562"],"import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { Button, TextField, Container, CssBaseline, Avatar, Typography } from '@material-ui/core';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { EmailSchema } from '../../schemas';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useStyles from '../../styles';\r\nimport { authRoute } from '../../../../api/index';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\ninterface Email {\r\n  email: string;\r\n}\r\n\r\nconst ResetPassword: React.FC = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const context = useAlertContext();\r\n  const sendResetPassword = async (data: Email) => {\r\n    await authRoute('reset_password', data)\r\n      .then((res) => {\r\n        context.openAlert(AlertType.info, 'Pomyślnie wysłano prośbę o reset hasła. Proszę sprawdzać skrzynkę mailową.');\r\n      })\r\n      .catch((err) => {\r\n        context.openAlert(AlertType.error, 'Coś poszło nie tak');\r\n      });\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <div className='black-hidden login-register'>\r\n      <img src='' className='img-cover' />\r\n      <Container component='main' maxWidth='xs' className='form'>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar src='' className={classes.avatarLarge} />\r\n          <Typography component='h1' variant='h5'>\r\n            Reset Hasła\r\n          </Typography>\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: ''\r\n            }}\r\n            validationSchema={EmailSchema}\r\n            onSubmit={(data, { setSubmitting }) => {\r\n              setSubmitting(true);\r\n              sendResetPassword(data);\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({ values, isSubmitting }) => (\r\n              <Form style={{ display: 'grid' }} className={classes.form}>\r\n                <MyTextField placeholder='E-mail' type='input' as={TextField} name='email' />\r\n                <Button type='submit' variant='contained' color='primary' disabled={isSubmitting} fullWidth className={classes.submit}>\r\n                  Wyślij\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Auth\\Register\\index.tsx",["563","564"],"import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { Button, TextField, Container, CssBaseline, Avatar, Typography, FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport MyCheckBox from '../../../Shared/Inputs/MyCheckBox';\r\nimport { RegisterValues } from '../../types';\r\nimport { RegisterSchema } from '../../schemas';\r\nimport useStyles from '../../styles';\r\nimport LogoPB from '../../../../assets/Images/LogoPB.png';\r\nimport { authRoute } from '../../../../api/index';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nconst Register: React.FC = () => {\r\n  const context = useAlertContext();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const register = async (data: RegisterValues) => {\r\n    await authRoute('register', data)\r\n      .then((res) => {\r\n        history.push('/login');\r\n        context.openAlert(AlertType.info, 'Pomyślnie stworzono konto. Proszę czekać na rozpatrzenie rejestracji');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        if (err.status === 403 || err.status === 409) context.openAlert(AlertType.error, err.data);\r\n        else context.openAlert(AlertType.error, 'Coś poszło nie tak.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=''>\r\n      <Container component='main' maxWidth='xs'>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar src={LogoPB} className={classes.avatarLarge} />\r\n          <Typography component='h1' variant='h5'>\r\n            Rejestracja\r\n          </Typography>\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n              repeatPassword: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              acceptRegulations: false\r\n            }}\r\n            validationSchema={RegisterSchema}\r\n            onSubmit={(data, { setSubmitting }) => {\r\n              setSubmitting(true);\r\n              register(data);\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({ values, isSubmitting }) => (\r\n              <Form style={{ display: 'grid' }} className={classes.form}>\r\n                <MyTextField placeholder='E-mail' type='input' as={TextField} name='email' />\r\n                <MyTextField placeholder='Imię' type='input' as={TextField} name='firstName' />\r\n                <MyTextField placeholder='Nazwisko' type='input' as={TextField} name='lastName' />\r\n                <MyTextField placeholder='Hasło' type='password' as={TextField} name='password' />\r\n                <MyTextField placeholder='Powtórz Hasło' type='password' as={TextField} name='repeatPassword' />\r\n                <Typography variant='subtitle2'>\r\n                  Rejestrując się akceptujesz <Link to='/regulamin'>regulamin</Link> platformy\r\n                </Typography>\r\n                <MyCheckBox name='acceptRegulations' placeholder='Akceptuję Regulamin?' />\r\n                <Button type='submit' variant='contained' color='primary' disabled={isSubmitting} fullWidth className={classes.submit}>\r\n                  Zarejestruj się\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Auth\\Login\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Home\\index.tsx",["565","566","567"],"import React from 'react';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport Cards from './Parts/Cards';\r\nimport Banner from './Parts/Banner';\r\nimport useStyles from './styles';\r\nconst Home: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Container maxWidth='xl'>\r\n        <Cards />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Shared\\Main\\Nav\\Links.tsx",["568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583"],"import { IconButton, Toolbar, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logout } from '../../../../components/Main/Auth/Logout/logout';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport useStyles from '../../../styles';\r\nimport { useUserContext } from '../../../../context/UserContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { AccountCircleOutlined } from '@material-ui/icons';\r\nimport SearchBar from '../../../../components/Main/Resources/Search/SearchBar';\r\ninterface Props {\r\n  hiddenMenu: boolean;\r\n  onRedirect: () => void;\r\n}\r\nconst Links: React.FC<Props> = ({ hiddenMenu, onRedirect }) => {\r\n  const context = useUserContext();\r\n  const history = useHistory();\r\n  const redirectLogout = async () => {\r\n    await logout();\r\n    context?.changeState(false, []);\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <div className={`menu collapse ${hiddenMenu ? '' : 'in'}`}>\r\n      <ul className='list'>\r\n        <li>\r\n          <ul className='inner-list'>\r\n            <li>\r\n              <b>Zasoby</b>\r\n            </li>\r\n            <li>\r\n              <Link to='/kadra' onClick={onRedirect}>\r\n                Kadra pracownicza\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/laboratoria' onClick={onRedirect}>\r\n                Laboratoria\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/pracownie' onClick={onRedirect}>\r\n                Pracownie specjalistyczne\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/maszyny' onClick={onRedirect}>\r\n                Urządzenia badawcze\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <ul className='inner-list'>\r\n            <li>\r\n              <b>Inne platformy</b>\r\n            </li>\r\n            <li>\r\n              <a>Wydział mechaniczny</a>\r\n            </li>\r\n            <li>\r\n              <a>Wydział informatyczny</a>\r\n            </li>\r\n            <li>\r\n              <a>Wydział elektryczny</a>\r\n            </li>\r\n            <li>\r\n              <a>Wydział budowniczy</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <ul className='inner-list'>\r\n            <li>\r\n              <b>Inne...</b>\r\n            </li>\r\n            <li>\r\n              <a>Biblioteka</a>\r\n            </li>\r\n            <li>\r\n              <a>Studium</a>\r\n            </li>\r\n            <li>\r\n              <a>SWFiS</a>\r\n            </li>\r\n            <li>\r\n              <a>UCI</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n\r\n        {context?.loggedIn ? (\r\n          <li>\r\n            <ul className='inner-list'>\r\n              <li>\r\n                <b>Moje Konto</b>\r\n              </li>\r\n              <li>\r\n                <Link to='/moje_konto' onClick={onRedirect}>\r\n                  {' '}\r\n                  Prolil\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to='/moje_konto/zmiana_hasla' onClick={onRedirect}>\r\n                  {' '}\r\n                  Zmiana hasła\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to='/moje_konto/rezerwacje' onClick={onRedirect}>\r\n                  {' '}\r\n                  Moje rezerwacje\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to='/moje_konto/usun_konto' onClick={onRedirect}>\r\n                  {' '}\r\n                  Usuń Konto\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  color='inherit'\r\n                  onClick={() => {\r\n                    onRedirect();\r\n                    redirectLogout();\r\n                  }}\r\n                >\r\n                  Wyloguj się\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        ) : (\r\n          <li>\r\n            <ul className='inner-list'>\r\n              <li>\r\n                <b>Platforma</b>\r\n              </li>\r\n              <li>\r\n                <Link color='inherit' to='/rejestracja' onClick={onRedirect}>\r\n                  Rejestracja\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link color='inherit' to='/login' onClick={onRedirect}>\r\n                  Login\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\containers\\Shared\\Admin\\Nav\\Links.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\Reservations\\Parts\\ReservationsTable.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\ResourceDetails\\Workshop\\index.tsx",["584","585","586","587","588"],"import React, { useState, useEffect } from 'react';\r\nimport { getData } from '../../../../api/index';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { CircularProgress, Paper, Container, Typography } from '@material-ui/core';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { IWorkshopDetails } from '../../types';\r\nimport { Params } from '../../../../utils/types';\r\nimport useStyles from '../../styles';\r\nimport { useUserContext } from '../../../../context/UserContext';\r\nimport { API_URL } from '../../../../utils/constants';\r\nimport WorkshopCalendar from '../../Calendar/WorkshopCalendar';\r\nimport NotFound from '../../../../assets/Images/not-found.webp';\r\nimport MyCard from '../../../Main/Resources/Labs/MyCard';\r\nconst WorkshopDetails: React.FC = () => {\r\n  const { id } = useParams<Params>();\r\n  const classes = useStyles();\r\n  const context = useUserContext();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [workshopDetails, setWorkshopDetails] = useState<IWorkshopDetails>();\r\n  useEffect(() => {\r\n    getWorkshop();\r\n  }, []);\r\n  const getWorkshop = async () => {\r\n    const data = await getData(`workshops/${id}`, getAccessToken());\r\n    setWorkshopDetails(data);\r\n    setLoading(false);\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Container maxWidth='xl'>\r\n      <div className='page-details'>\r\n        <div className='image-details'>{workshopDetails?.imagePath !== null ? <img src={API_URL + '/' + workshopDetails?.imagePath} /> : <img src={NotFound} />}</div>\r\n        <div className='page-details-content'>\r\n          <Typography variant='h3'>{workshopDetails?.name}</Typography>\r\n          <Typography variant='h5'>{workshopDetails?.english_name}</Typography>\r\n          <br />\r\n          <Typography variant='body1'>Numer sali: {workshopDetails?.room_number}</Typography>\r\n          <br />\r\n          <Typography variant='body1'>Osoby nadzorujące:</Typography>\r\n          {workshopDetails?.Employees.map((item) => (\r\n            <Typography variant='body2' component={Link} to={'/kadra/' + item.userId} key={item.id}>\r\n              <b>\r\n                {item.User.lastName} {item.User.firstName}\r\n              </b>\r\n            </Typography>\r\n          ))}\r\n          <br />\r\n          {workshopDetails?.WorkshopType ? (\r\n            <Typography variant='body1'>\r\n              Typ pracowni: {workshopDetails?.WorkshopType.name} <br></br> Workshop type: {workshopDetails?.WorkshopType.english_name}\r\n            </Typography>\r\n          ) : (\r\n            <Typography variant='body1'>\r\n              Typ pracowni: Nie określono<br></br> Workshop type: Nie określono\r\n            </Typography>\r\n          )}\r\n          <br />\r\n          <Typography variant='body2'>{workshopDetails?.additionalInfo !== null && workshopDetails?.additionalInfo}</Typography>\r\n        </div>\r\n        <br />\r\n      </div>\r\n      <Typography variant='body1'>\r\n        <b>Wyposażenie pracowni: </b>\r\n      </Typography>\r\n      <br />\r\n      <div className='labs-grid'>\r\n        {workshopDetails?.Machines.map((item) => (\r\n          <MyCard key={item.id} link={'/maszyny/' + item.id} name={item.name} english_name={item.english_name} />\r\n        ))}\r\n      </div>\r\n      <br></br>\r\n      {context?.loggedIn && <WorkshopCalendar id={id} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WorkshopDetails;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\ResourceDetails\\Reservation\\index.tsx",["589","590"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Typography, CircularProgress, Avatar } from '@material-ui/core';\r\nimport { getData } from '../../../../api/index';\r\nimport { IReservationDetails } from '../../types';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { API_URL } from '../../../../utils/constants';\r\nimport BrokenImageIcon from '@material-ui/icons/BrokenImage';\r\nimport format from 'date-fns/format';\r\nimport useStyles from '../../styles';\r\nimport UpdateResCalendar from '../../Calendar/UpdateResCalendar';\r\ntype Params = {\r\n  id: string;\r\n};\r\n\r\nconst ReservationDetails: React.FC = () => {\r\n  const { id } = useParams<Params>();\r\n  const [isOwned, setIsOwned] = useState<boolean>(false);\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [reservation, setReservation] = useState<IReservationDetails>();\r\n  useEffect(() => {\r\n    isReservationOwned();\r\n    getReservationDetails();\r\n  }, []);\r\n  const getReservationDetails = async () => {\r\n    await getData('rental/' + id, getAccessToken())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setReservation(res);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const isReservationOwned = async () => {\r\n    await getData('rental/owned/' + id, getAccessToken())\r\n      .then((res) => {\r\n        setIsOwned(true);\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container maxWidth='xl'>\r\n      <section className='container-spacing'>\r\n        <Container maxWidth='sm'>\r\n          <div className='details'>\r\n            <div className='image'>\r\n              {reservation?.Machine.imagePath !== null ? (\r\n                <div className='image-details'>\r\n                  <img src={API_URL + '/' + reservation?.Machine.imagePath} />\r\n                </div>\r\n              ) : (\r\n                <Avatar variant='rounded' className={classes.image}>\r\n                  <BrokenImageIcon />\r\n                </Avatar>\r\n              )}\r\n              <div className='main'>\r\n                <Typography variant='h6'>{reservation?.Machine.name}</Typography>\r\n                <Typography variant='subtitle1'>\r\n                  Początek: <i>{format(new Date(reservation!.start_date), 'HH:mm dd/MM/yyyy')}</i>\r\n                </Typography>\r\n                <Typography variant='subtitle1'>\r\n                  Koniec: <i>{format(new Date(reservation!.end_date), 'HH:mm dd/MM/yyyy')}</i>\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className='submain'>\r\n              <Typography variant='body1'>Osoba wypożyczająca: {reservation?.Employee.User.firstName + '' + reservation?.Employee.User.lastName}</Typography>\r\n              <Typography variant='subtitle1'>\r\n                Komentarz do rezerwacji: <br></br> {reservation?.ReservationSurvey !== null ? reservation?.ReservationSurvey.comment : ''}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n      {isOwned && (\r\n        <UpdateResCalendar\r\n          maxUnit={reservation?.Machine.maxUnit}\r\n          timeUnit={reservation!.Machine.timeUnit}\r\n          endDate={reservation!.end_date}\r\n          startDate={reservation!.start_date}\r\n          isMachineActive={reservation!.Machine.machineState}\r\n          id={reservation!.id}\r\n          machineId={reservation!.Machine.id}\r\n          state={reservation!.state}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReservationDetails;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\ResourceDetails\\Machine\\index.tsx",["591","592","593","594","595","596"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getData } from '../../../../api/index';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { CircularProgress, Container, Typography, Avatar } from '@material-ui/core';\r\nimport { IMachineDetails } from '../../types';\r\nimport useStyles from '../../styles';\r\nimport { useUserContext } from '../../../../context/UserContext';\r\nimport { API_URL } from '../../../../utils/constants';\r\nimport BrokenImageIcon from '@material-ui/icons/BrokenImage';\r\nimport MachineCalendar from '../../Calendar/MachineCalendar';\r\nimport NotFound from '../../../../assets/Images/not-found.webp';\r\ninterface Params {\r\n  id: string;\r\n}\r\nconst MachineDetails: React.FC = () => {\r\n  const { id } = useParams<Params>();\r\n  const context = useUserContext();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [machineDetails, setMachineDetails] = useState<IMachineDetails>();\r\n  useEffect(() => {\r\n    getMachineDetails();\r\n  }, []);\r\n\r\n  const getMachineDetails = async () => {\r\n    const data = await getData(`machines/${id}`, getAccessToken());\r\n    setMachineDetails(data);\r\n    setLoading(false);\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container maxWidth='xl'>\r\n      <div className='page-details'>\r\n        <div className='image-details'>{machineDetails?.imagePath !== null ? <img src={API_URL + '/' + machineDetails?.imagePath} /> : <img src={NotFound} />}</div>\r\n        <div className='page-details-content'>\r\n          <Typography variant='h3'>{machineDetails?.name}</Typography>\r\n          <Typography variant='h5'>{machineDetails?.english_name}</Typography>\r\n          <br />\r\n          <Typography variant='subtitle2'>Status:</Typography>\r\n          <Typography variant='subtitle1' className='error'>\r\n            {machineDetails?.machineState ? 'Aktywna' : 'Nieaktywna'}\r\n          </Typography>\r\n          <Typography variant='body2'>{machineDetails?.additionalInfo !== null && machineDetails?.additionalInfo}</Typography>\r\n        </div>\r\n      </div>\r\n      {context?.loggedIn && <MachineCalendar id={id} isMachineActive={machineDetails?.machineState} timeUnit={machineDetails!.timeUnit} maxUnit={machineDetails?.maxUnit} roles={context.roles} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MachineDetails;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\ResourceDetails\\Lab\\index.tsx",["597","598"],"import React, { useState, useEffect } from 'react';\r\nimport { getData } from '../../../../api/index';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { ILabDetails } from '../../types';\r\nimport { Container, Typography, Paper } from '@material-ui/core';\r\nimport MyCard from '../../../Main/Resources/Labs/MyCard';\r\ninterface Params {\r\n  id: string;\r\n}\r\nconst LabDetails: React.FC = () => {\r\n  const { id } = useParams<Params>();\r\n  const [labDetails, setLabDetails] = useState<ILabDetails>();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  useEffect(() => {\r\n    getLabDetails();\r\n  }, []);\r\n  const getLabDetails = async () => {\r\n    const data = await getData(`labs/${id}`, getAccessToken());\r\n    console.log(data);\r\n    setLabDetails(data);\r\n    setLoading(false);\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container maxWidth='md'>\r\n      <div className='lab-details'>\r\n        <div className='lab-details-title'>\r\n          <Typography variant='h4'>{labDetails?.name}</Typography>\r\n          <Typography variant='h5'>{labDetails?.english_name}</Typography>\r\n          <br />\r\n          <Typography variant='body1'>\r\n            <b>Osoba nadzorująca:</b>\r\n          </Typography>\r\n          {labDetails?.Employee !== null && (\r\n            <Typography variant='body1' component={Link} to={'/kadra/' + labDetails?.Employee.userId}>\r\n              {labDetails?.Employee.User.lastName} {labDetails?.Employee.User.firstName}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        <div className='lab-details-content'>\r\n          <Typography variant='body1'>Pracownie specjalistyczne należącego do tego laboratorium:</Typography>\r\n          <div className='labs-grid'>\r\n            {labDetails?.Workshops.map((item) => (\r\n              <MyCard key={item.id} name={item.name} english_name={item.english_name} roomNumber={item.room_number.toString()} link={'/pracownie/' + item.id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LabDetails;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Employees\\table.tsx",["599"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Avatar, Paper, TextField } from '@material-ui/core';\r\nimport { IEmployee } from '../../types';\r\nimport useStyles from '../../styles';\r\nimport { API_URL } from '../../../../utils/constants';\r\ninterface Props {\r\n  Employees: IEmployee[];\r\n}\r\n\r\nconst EmployeeTable: React.FC<Props> = ({ Employees }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer className={classes.container} component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            <TableCell>Tytuł</TableCell>\r\n            <TableCell>Imię</TableCell>\r\n            <TableCell>Nazwisko</TableCell>\r\n            <TableCell>Katedra</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Employees.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>\r\n                <Link to={'/kadra/' + row.id}>{row.picturePath !== null ? <Avatar src={API_URL + '/' + row.picturePath} /> : <Avatar />}</Link>\r\n              </TableCell>\r\n              <TableCell>{row.firstName}</TableCell>\r\n              <TableCell>{row.lastName}</TableCell>\r\n              <TableCell>{row.Employee?.Department ? row.Employee?.Department.name : ' '}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default EmployeeTable;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Labs\\MyCard.tsx",["600"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 400,\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 330\r\n    }\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n}));\r\ninterface Props {\r\n  name: string;\r\n  english_name: string;\r\n  link: string;\r\n  roomNumber?: string;\r\n}\r\nconst MyCard: React.FC<Props> = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className='lab-card'>\r\n      <Link to={props.link}>\r\n        <div className='lab-card-content'>\r\n          <h4>{props.name}</h4>\r\n          <h5>{props.english_name}</h5>\r\n          {props.roomNumber && <p>Nr sali: {props.roomNumber}</p>}\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default MyCard;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\schemas.ts",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Display\\PageTitle.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\styles.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Display\\TokenExpired.tsx",["601","602"],"import React from 'react';\r\n\r\nimport useStyles from '../styles';\r\nimport { Container, Avatar, Typography } from '@material-ui/core';\r\ninterface Props {\r\n  message: string;\r\n}\r\n\r\nconst TokenExpired: React.FC<Props> = ({ message }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className='black-hidden login-register'>\r\n      <img src='' className='img-cover' />\r\n      <Container component='main' maxWidth='sm' className='form'>\r\n        <div>\r\n          <Avatar src='' />\r\n          <div>\r\n            <Typography variant='subtitle2' className='error'>\r\n              {message}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TokenExpired;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Inputs\\MyTextField.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Inputs\\MyCheckBox.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Home\\styles.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\types.ts",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Home\\Parts\\Cards.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Home\\Parts\\Banner.tsx",["603"],"import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Banner: React.FC = () => {\r\n  return (\r\n    <div className='landing'>\r\n      <div className='banner black-hidden'>\r\n        <img src='../../../assets/Images/background.jpg' className='img-cover' />\r\n        <div className='banner-subtitle'>\r\n          <Typography variant='h2'>Politechnika Białostocka</Typography>\r\n          <Typography variant='subtitle1'>Najlepsza uczelnia techniczna w północno-wschpdniej Polsce</Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n",["604","605"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Profile\\Reservations\\Parts\\RentAction.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\styles.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Modal\\DeleteModal.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\schemas.ts",[],["606","607"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Home\\Parts\\HomeCard.tsx",["608","609"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useStyles from '../styles';\r\ninterface Props {\r\n  title: string;\r\n  subTitle?: string;\r\n  link: string;\r\n  image: string;\r\n}\r\n\r\nconst HomeCard: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className='boxlink zoomIn animated'>\r\n      <Link to={props.link}>\r\n        <div className='boxlink-title'>\r\n          {props.title}{' '}\r\n          {props.subTitle !== null && (\r\n            <span>\r\n              <br />\r\n              {props.subTitle}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className='boxlink-content'>\r\n          <img src={props.image} />\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeCard;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Inputs\\MyDateTimePicker.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Inputs\\MyTextArea.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Groups\\SortData.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Reservation\\ReservationList.tsx",["610"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getData } from '../../../../api/index';\r\nimport { DataGrid, ColDef, CellParams } from '@material-ui/data-grid';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport format from 'date-fns/format';\r\ninterface Props {}\r\n\r\nconst ReservationList: React.FC<Props> = () => {\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, []);\r\n  const context = useAlertContext();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [reservations, setReservations] = useState<[]>([]);\r\n  const getReservations = async () => {\r\n    await getData('rental', getAccessToken())\r\n      .then((res) => {\r\n        let tmpReservations = res.map((item: any) => {\r\n          return {\r\n            id: item.id,\r\n            MachineName: item.Machine.name,\r\n            WorkshopName: item.Machine.Workshop.name,\r\n            start_date: format(new Date(item.start_date), 'HH:mm dd/MM/yyyy'),\r\n            end_date: format(new Date(item.start_date), 'HH:mm dd/MM/yyyy'),\r\n            state: item.state\r\n          };\r\n        });\r\n        setReservations(tmpReservations);\r\n      })\r\n      .catch((err) => {\r\n        context.openAlert(AlertType.error, err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const columns: ColDef[] = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'Identyfikator',\r\n      type: 'number',\r\n      width: 130,\r\n      disableClickEventBubbling: true,\r\n      renderCell: (params: CellParams) => {\r\n        return <Link to={'/rezerwacje/' + params.value}>{params.value}</Link>;\r\n      }\r\n    },\r\n    { field: 'MachineName', headerName: 'Maszyna', width: 130 },\r\n    { field: 'WorkshopName', headerName: 'Pracownia', width: 130 },\r\n    { field: 'start_date', headerName: 'Początek', width: 160 },\r\n    { field: 'end_date', headerName: 'Koniec', width: 160 },\r\n    { field: 'state', headerName: 'Status', width: 130 }\r\n  ];\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <div style={{ height: 600, width: '100%' }}>\r\n      <DataGrid rows={reservations} columns={columns} pageSize={20} rowHeight={45} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservationList;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Employee\\EmployeeList.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Guest\\GuestList.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Display\\MyCard.tsx",[],["611","612"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\index.tsx",["613"],"import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\ninterface Props {}\r\n\r\nconst Dashboard: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      <h1>Strona główna panelu administracyjnego</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\ResourceDetails\\Employee\\index.tsx",["614","615","616","617"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Lab\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Workshop\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Department\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\WorkshopType\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Machine\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Workshop\\index.tsx",["618"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { putData, getData, postImage } from '../../../../api/index';\r\nimport { Params } from '../../../../utils/types';\r\nimport ImageUploadButton from '../../../Shared/Buttons/ImageUploadButton';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { ILab, IWorkshopType, IEmployee, IWorkshop } from '../../types';\r\nimport { WorkshopSchema } from '../../schemas';\r\nimport { Button, TextField, Container, InputLabel, FormControl, Paper, FormGroup, IconButton, Avatar, Typography, CssBaseline, NativeSelect } from '@material-ui/core';\r\nimport { Formik, Form, Field, FieldArray } from 'formik';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { API_URL } from '../../../../utils/constants';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MyTextArea from '../../../Shared/Inputs/MyTextArea';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport useStyles from '../../styles';\r\ninterface Workshop extends IWorkshop {\r\n  Employees: IEmployee[];\r\n}\r\nconst UpdateWorkshop: React.FC = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams<Params>();\r\n  const classes = useStyles();\r\n  const [labs, setLabs] = useState<ILab[]>([]);\r\n  const [currentPhoto, setCurrentPhoto] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [wTypes, setWTypes] = useState<IWorkshopType[]>([]);\r\n  const [currentWorkshop, setCurrenWorkshop] = useState<Workshop>({ id: 0, name: '', english_name: '', labId: 0, typeId: 0, room_number: '', Employees: [], imagePath: '' });\r\n  const [employees, setEmployees] = useState<IEmployee[]>([]);\r\n  const inputImage = useRef<HTMLInputElement>(null);\r\n  const alertContext = useAlertContext();\r\n  useEffect(() => {\r\n    getFormData();\r\n  }, []);\r\n  const getFormData = async () => {\r\n    let token = getAccessToken();\r\n    const [tempTypes, tempLabs, tempEmployees, tempWorkshop] = await Promise.all([\r\n      getData('workshopTypes/list', token),\r\n      getData('labs/list', token),\r\n      getData('employees/list', token),\r\n      getData('workshops/' + id, token)\r\n    ]);\r\n    setWTypes(tempTypes);\r\n    setLabs(tempLabs);\r\n    setEmployees(tempEmployees);\r\n    setCurrenWorkshop(tempWorkshop);\r\n    setCurrentPhoto(API_URL + '/' + tempWorkshop.imagePath);\r\n    setLoading(false);\r\n  };\r\n  const HandleFileUpload = () => {\r\n    setCurrentPhoto(URL.createObjectURL(inputImage.current?.files![0]));\r\n  };\r\n  const updateWorkshop = async (values: any) => {\r\n    await putData('workshops/' + id, getAccessToken(), values)\r\n      .then(async (res) => {\r\n        const file = inputImage.current as HTMLInputElement;\r\n        if (file.files![0] !== undefined) {\r\n          await postImage('workshops/upload_image', getAccessToken(), file.files![0], res?.data.id);\r\n        }\r\n        alertContext.openAlert(AlertType.success, 'Pomyślnie dodano nową pracownię do bazy!');\r\n        history.push('/admin/workshops');\r\n      })\r\n      .catch((err) => alertContext.openAlert(AlertType.warning, 'Coś poszło nie tak.'));\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Container maxWidth='sm' component='main'>\r\n      <CssBaseline />\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <EditIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Edytuj Pracownię\r\n        </Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            name: currentWorkshop.name,\r\n            english_name: currentWorkshop.english_name,\r\n            room_number: currentWorkshop.room_number,\r\n            typeId: currentWorkshop.typeId ? currentWorkshop.typeId : 0,\r\n            labId: currentWorkshop.labId ? currentWorkshop.labId : 0,\r\n            employees: currentWorkshop.Employees.map((emp) => {\r\n              return { employeeId: emp.id };\r\n            }),\r\n            additionalInfo: currentWorkshop.additionalInfo\r\n          }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            updateWorkshop(data);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={WorkshopSchema}\r\n        >\r\n          {({ values, isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='name' type='input' as={TextField} placeholder='Nazwa' />\r\n              <MyTextField name='english_name' type='input' as={TextField} placeholder='Przetłumaczona nazwa' />\r\n              <MyTextField name='room_number' type='input' as={TextField} placeholder='Numer Sali' />\r\n              <FormControl>\r\n                <InputLabel id='type-select'>Typ Pracowni</InputLabel>\r\n                <Field id='type-select' name='typeId' type='select' as={NativeSelect}>\r\n                  <option value={0}>Brak</option>\r\n                  {wTypes !== null &&\r\n                    wTypes.map((type) => (\r\n                      <option value={type.id} key={type.id}>\r\n                        {type.symbol}\r\n                      </option>\r\n                    ))}\r\n                </Field>\r\n              </FormControl>\r\n              <FormControl>\r\n                <InputLabel id='lab-select'>Laboratorium</InputLabel>\r\n                <Field id='lab-select' name='labId' type='select' as={NativeSelect}>\r\n                  <option value={0}>Brak</option>\r\n                  {labs !== null &&\r\n                    labs.map((lab) => (\r\n                      <option value={lab.id} key={lab.id}>\r\n                        {lab.name}\r\n                      </option>\r\n                    ))}\r\n                </Field>\r\n              </FormControl>\r\n              <FormGroup>\r\n                <FieldArray name='employees'>\r\n                  {(arrayHelpers) => (\r\n                    <div>\r\n                      <Button\r\n                        onClick={() =>\r\n                          arrayHelpers.push({\r\n                            employeeId: employees[0].Employee.id\r\n                          })\r\n                        }\r\n                        variant='outlined'\r\n                      >\r\n                        Dodaj opiekuna\r\n                      </Button>\r\n                      {values.employees.map((employee, index) => {\r\n                        return (\r\n                          <div key={employee.employeeId} className='form-control'>\r\n                            <Field name={`employees[${index}].employeeId`} type='select' as={NativeSelect}>\r\n                              {employees.map((emp) => (\r\n                                <option value={emp.Employee.id} key={emp.Employee.id}>\r\n                                  {emp.firstName}\r\n                                  {emp.lastName}\r\n                                </option>\r\n                              ))}\r\n                            </Field>\r\n                            <IconButton onClick={() => arrayHelpers.remove(index)}>\r\n                              <ClearIcon />\r\n                            </IconButton>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                </FieldArray>\r\n              </FormGroup>\r\n              <MyTextArea name='additionalInfo' as={TextField} placeholder='Dodatkowe informacje' />\r\n              <ImageUploadButton currentPhoto={currentPhoto} handleChange={HandleFileUpload} inputImage={inputImage} />\r\n              <Button type='submit' variant='contained' disabled={isSubmitting} color='primary'>\r\n                Aktualizuj Pracownię\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateWorkshop;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\WorkshopType\\index.tsx",["619"],"import React, { useEffect, useState } from 'react';\r\nimport { putData, getData } from '../../../../api/index';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { IWorkshopType } from '../../types';\r\nimport { WorkshopTypeSchema } from '../../schemas';\r\nimport { Button, TextField, Container, Avatar, Typography, CssBaseline, Paper } from '@material-ui/core';\r\nimport { Formik, Form } from 'formik';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { Params } from '../../../../utils/types';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport useStyles from '../../styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst NewWorkshopType: React.FC = () => {\r\n  const context = useAlertContext();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [currentWorkshopType, setCurrentWorkshopType] = useState<IWorkshopType>({ id: 0, name: '', english_name: '', symbol: '' });\r\n  const { id } = useParams<Params>();\r\n  useEffect(() => {\r\n    getWorkshopType();\r\n  }, []);\r\n  const getWorkshopType = async () => {\r\n    const data = await getData('workshopTypes/' + id, getAccessToken());\r\n    setCurrentWorkshopType(data);\r\n    setLoading(false);\r\n  };\r\n  const history = useHistory();\r\n  const newWorkshopType = async (values: IWorkshopType) => {\r\n    await putData('workshopTypes/' + id, getAccessToken(), values);\r\n    context.openAlert(AlertType.success, 'Pomyślnie zaktualizowano typ pracowni w bazy!');\r\n    history.push('/admin/workshop_types');\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container maxWidth='sm' component='main'>\r\n      <CssBaseline />\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AddIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Dodaj Typ Pracowni\r\n        </Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{ id: 0, name: currentWorkshopType.name, english_name: currentWorkshopType.english_name, symbol: currentWorkshopType.symbol }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            newWorkshopType(data);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={WorkshopTypeSchema}\r\n        >\r\n          {({ values, isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='name' type='input' as={TextField} placeholder='Nazwa' />\r\n              <MyTextField name='english_name' type='input' as={TextField} placeholder='Przetłumaczona nazwa' />\r\n              <MyTextField name='symbol' type='input' as={TextField} placeholder='Symbol' />\r\n              <Button type='submit' variant='contained' disabled={isSubmitting} color='primary'>\r\n                Aktualizuj\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewWorkshopType;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Machine\\index.tsx",["620"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { putData, getData, postImage } from '../../../../api/index';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { IMachine, IWorkshop } from '../../types';\r\nimport { MachineSchema } from '../../schemas';\r\nimport { Button, TextField, Container, InputLabel, Avatar, CssBaseline, FormHelperText, NativeSelect, Paper, FormControlLabel, FormControl, Checkbox, Typography } from '@material-ui/core';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport ImageUploadButton from '../../../Shared/Buttons/ImageUploadButton';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { Params } from '../../../../utils/types';\r\nimport MyTextArea from '../../../Shared/Inputs/MyTextArea';\r\nimport { API_URL, TimeUnit } from '../../../../utils/constants';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport useStyles from '../../styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst UpdateMachine: React.FC = () => {\r\n  const context = useAlertContext();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const history = useHistory();\r\n  const { id } = useParams<Params>();\r\n  const [currentPhoto, setCurrentPhoto] = useState<string>('');\r\n  const [workshopList, setWorkshopList] = useState<IWorkshop[]>([]);\r\n  const inputImage = useRef<HTMLInputElement>(null);\r\n  const [currentMachine, setCurrentMachine] = useState<IMachine>({ id: 0, name: '', english_name: '', timeUnit: '', maxUnit: 0, machineState: false, workshopId: 0 });\r\n  useEffect(() => {\r\n    getFormData();\r\n  }, []);\r\n  const getFormData = async () => {\r\n    const [tempWorkshops, tempMachine] = await Promise.all([getData('workshops/names', getAccessToken()), getData('machines/' + id, getAccessToken())]);\r\n    setCurrentMachine(tempMachine);\r\n    setWorkshopList(tempWorkshops);\r\n    setCurrentPhoto(API_URL + '/' + tempMachine.imagePath);\r\n    setLoading(false);\r\n  };\r\n  const HandleFileUpload = () => {\r\n    setCurrentPhoto(URL.createObjectURL(inputImage.current?.files![0]));\r\n  };\r\n  const updateMachine = async (values: any) => {\r\n    const res = await putData('machines/' + id, getAccessToken(), values);\r\n    const file = inputImage.current as HTMLInputElement;\r\n    if (file.files![0] !== undefined) {\r\n      await postImage('machines/upload_image', getAccessToken(), file.files![0], res?.data.id);\r\n    }\r\n    context.openAlert(AlertType.success, 'Pomyślnie zaktualizowano maszynę w bazie!');\r\n    history.push('/admin/machines');\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container maxWidth='sm' component='main'>\r\n      <CssBaseline />\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <EditIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Edytuj Maszynę\r\n        </Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            name: currentMachine.name,\r\n            english_name: currentMachine.english_name,\r\n            timeUnit: currentMachine.timeUnit,\r\n            maxUnit: currentMachine.maxUnit,\r\n            machineState: currentMachine.machineState,\r\n            workshopId: currentMachine.workshopId,\r\n            additionalInfo: currentMachine.additionalInfo\r\n          }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            updateMachine(data);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={MachineSchema}\r\n        >\r\n          {({ values, isSubmitting, errors }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='name' type='input' as={TextField} placeholder='Nazwa' />\r\n              <MyTextField name='english_name' type='input' as={TextField} placeholder='Przetłumaczona nazwa' />\r\n              <MyTextField name='maxUnit' type='number' as={TextField} min='1' max='20' placeholder=' Max. ilość jednostek czasu' />\r\n\r\n              <FormControlLabel control={<Field name='machineState' type='checkbox' as={Checkbox} />} label='Aktywna?' />\r\n              <FormControl error={!!errors.timeUnit}>\r\n                <InputLabel htmlFor='timeUnit'>Jednostka Czasu</InputLabel>\r\n                <Field name='timeUnit' as={NativeSelect} placeholder='Jednostka Czasu'>\r\n                  <option value={TimeUnit[15]} key={TimeUnit[15]}>\r\n                    15 minut\r\n                  </option>\r\n                  <option value={TimeUnit[30]} key={TimeUnit[30]}>\r\n                    30 minut\r\n                  </option>\r\n                  <option value={TimeUnit[45]} key={TimeUnit[45]}>\r\n                    45 minut\r\n                  </option>\r\n                  <option value={TimeUnit[60]} key={TimeUnit[60]}>\r\n                    60 minut\r\n                  </option>\r\n                </Field>\r\n                <FormHelperText>{errors.timeUnit}</FormHelperText>\r\n              </FormControl>\r\n              <FormControl>\r\n                <InputLabel htmlFor='workshopId'>Pracownia</InputLabel>\r\n                <Field name='workshopId' as={NativeSelect}>\r\n                  {workshopList.map((workshop) => (\r\n                    <option value={workshop.id} key={workshop.id}>\r\n                      {workshop.name}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </FormControl>\r\n              <MyTextArea name='additionalInfo' as={TextField} placeholder='Dodatkowe informacje' />\r\n              <ImageUploadButton currentPhoto={currentPhoto} handleChange={HandleFileUpload} inputImage={inputImage} />\r\n              <Button type='submit' variant='contained' disabled={isSubmitting} color='primary'>\r\n                Aktualizuj\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateMachine;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Groups\\MyButtonGroup.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Lab\\index.tsx",["621"],"import React, { useState, useEffect } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { getData, putData } from '../../../../api/index';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { ILab, IEmployee } from '../../types';\r\nimport { LabSchema } from '../../schemas';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport { Button, TextField, Container, InputLabel, FormControl, Paper, Avatar, Typography, CssBaseline, NativeSelect } from '@material-ui/core';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { Params } from '../../../../utils/types';\r\nimport useStyles from '../../styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nconst Lab: React.FC = () => {\r\n  const classes = useStyles();\r\n  const context = useAlertContext();\r\n  const history = useHistory();\r\n  const { id } = useParams<Params>();\r\n  const [currentLab, setCurrentLab] = useState<ILab>({ id: 0, name: '', english_name: '', employeeId: 0 });\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [employees, setEmployees] = useState<IEmployee[]>([]);\r\n  useEffect(() => {\r\n    getLab();\r\n    getEmployees();\r\n  }, []);\r\n  const getLab = async () => {\r\n    const data = await getData('labs/' + id, getAccessToken());\r\n    setCurrentLab(data);\r\n    setLoading(false);\r\n  };\r\n  const getEmployees = async () => {\r\n    const data = await getData('employees/list', getAccessToken());\r\n    setEmployees(data);\r\n  };\r\n  const updateLab = async (values: any) => {\r\n    await putData('labs/' + id, getAccessToken(), values)\r\n      .then(() => {\r\n        context.openAlert(AlertType.success, 'Pomyślnie zaktualizowano laboratorium w bazie!');\r\n        history.push('/admin/labs');\r\n      })\r\n      .catch((err) => context.openAlert(AlertType.warning, err));\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Container maxWidth='sm' component='main'>\r\n      <CssBaseline />\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <EditIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Edytuj Laboratorium\r\n        </Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{ name: currentLab.name, english_name: currentLab.english_name, employeeId: currentLab.employeeId !== null ? currentLab.employeeId : '' }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            updateLab(data);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={LabSchema}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='name' type='input' as={TextField} placeholder='Nazwa' />\r\n              <MyTextField name='english_name' type='input' as={TextField} placeholder='Przetłumaczona nazwa' />\r\n              <FormControl>\r\n                <InputLabel htmlFor='employeeId'>Pracownik </InputLabel>\r\n                <Field name='employeeId' type='select' as={NativeSelect}>\r\n                  <option value=''></option>\r\n                  {employees.map((emp) => (\r\n                    <option value={emp.Employee.id} key={emp.Employee.id}>\r\n                      {emp.firstName} {emp.lastName}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </FormControl>\r\n              <Button type='submit' variant='contained' disabled={isSubmitting} color='primary'>\r\n                Zaktualizuj Laboratorium\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Lab;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Guest\\index.tsx",["622","623"],"import React, { useEffect, useState } from 'react';\r\nimport { putData, getData } from '../../../../api/index';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { IGuest } from '../../types';\r\nimport { UserSchema } from '../../schemas';\r\nimport { Button, TextField, Container, Grid, Paper, Checkbox, FormControlLabel, CssBaseline, Avatar, Typography } from '@material-ui/core';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport useStyles from '../../styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport { Params } from '../../../../utils/types';\r\nconst UpdateGuest: React.FC = () => {\r\n  const alertContext = useAlertContext();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [currentGuest, setCurrentGuest] = useState<IGuest>({ id: 0, firstName: '', lastName: '', email: '', isVerified: false, setEmployee: false });\r\n  const { id } = useParams<Params>();\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    getGuest();\r\n  }, []);\r\n  const getGuest = async () => {\r\n    const data = await getData('guests/' + id, getAccessToken());\r\n    setCurrentGuest({\r\n      id: +id,\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      email: data.email,\r\n      password: '',\r\n      repeatPassword: '',\r\n      setEmployee: false,\r\n      isVerified: data.Guest.isVerified\r\n    });\r\n    setLoading(false);\r\n  };\r\n  const history = useHistory();\r\n  const updateGuest = async (values: any) => {\r\n    await putData('guests/' + id, getAccessToken(), values)\r\n      .then(() => {\r\n        alertContext.openAlert(AlertType.success, 'Pomyślnie zaktualizowano gościa');\r\n        history.push('/admin/employees');\r\n      })\r\n      .catch((err) => alertContext.openAlert(AlertType.warning, err));\r\n    history.push('/admin/guests');\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container maxWidth='sm' component='main'>\r\n      <CssBaseline />\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <EditIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Edytuj profil gościa\r\n        </Typography>\r\n\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            firstName: currentGuest.firstName,\r\n            lastName: currentGuest.lastName,\r\n            email: currentGuest.email,\r\n            password: '',\r\n            repeatPassword: '',\r\n            isVerified: currentGuest.isVerified,\r\n            setEmployee: currentGuest.setEmployee\r\n          }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            updateGuest(data);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={UserSchema}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='firstName' type='input' as={TextField} placeholder='Imię' />\r\n              <MyTextField name='lastName' type='input' as={TextField} placeholder='Nazwisko' />\r\n              <MyTextField name='email' type='input' as={TextField} placeholder='Email' />\r\n              <MyTextField name='password' type='input' as={TextField} placeholder='Nowe Hasło' />\r\n              <MyTextField name='repeatPassword' type='input' as={TextField} placeholder='Powtórz Hasło' />\r\n              <FormControlLabel label='Zwerifikowany?' control={<Field name='isVerified' as={Checkbox} type='checkbox' />} />\r\n\r\n              <FormControlLabel label='Pracownik?' control={<Field name='setEmployee' as={Checkbox} type='checkbox' />} />\r\n              <Button type='submit' variant='contained' disabled={isSubmitting} color='primary'>\r\n                Aktualizuj\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateGuest;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Employee\\index.tsx",["624"],"import React, { useEffect, useState } from 'react';\r\nimport { putData, getData } from '../../../../api/index';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { IEmployee, IDepartment, IDegree } from '../../types';\r\nimport { UserSchema } from '../../schemas';\r\nimport { Button, TextField, Paper, Container, Checkbox, FormControlLabel, Typography, FormControl, InputLabel, NativeSelect, CssBaseline, Avatar } from '@material-ui/core';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { Params } from '../../../../utils/types';\r\nimport useStyles from '../../styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\n\r\nconst UpdateEmployee: React.FC = () => {\r\n  const classes = useStyles();\r\n  const alertContext = useAlertContext();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [departmentList, setDepartmentList] = useState<IDepartment[]>(() => {\r\n    return [];\r\n  });\r\n  const [degreesList, setDegreesList] = useState<IDegree[]>(() => {\r\n    return [];\r\n  });\r\n  const [currentEmp, setCurrentEmp] = useState<IEmployee>({\r\n    id: 0,\r\n    firstName: '',\r\n    lastName: '',\r\n    password: '',\r\n    repeatPassword: '',\r\n    email: '',\r\n    setEmployee: true,\r\n    Employee: {\r\n      departmentId: 0,\r\n      degreeId: 0\r\n    }\r\n  });\r\n  const history = useHistory();\r\n  const { id } = useParams<Params>();\r\n  useEffect(() => {\r\n    getEmp();\r\n  }, []);\r\n  const getEmp = async () => {\r\n    const [emp, depList, degList] = await Promise.all([getData('employees/' + id, getAccessToken()), getData('departments/list', getAccessToken()), getData('degrees/list', getAccessToken())]);\r\n    setDepartmentList(() => {\r\n      return depList;\r\n    });\r\n    setDegreesList(() => {\r\n      return degList;\r\n    });\r\n    setCurrentEmp({\r\n      id: +id,\r\n      firstName: emp.firstName,\r\n      lastName: emp.lastName,\r\n      email: emp.email,\r\n      password: '',\r\n      repeatPassword: '',\r\n      setEmployee: true,\r\n      Employee: {\r\n        departmentId: emp.Employee.Department ? emp.Employee.Department.id : 0,\r\n        degreeId: emp.Employee.Degree ? emp.Employee.Degree.id : 0,\r\n        room: emp.Employee.room,\r\n        telephone: emp.Employee.telephone\r\n      }\r\n    });\r\n    setLoading(false);\r\n  };\r\n  const updateEmp = async (values: any) => {\r\n    await putData('employees/' + id, getAccessToken(), values)\r\n      .then(() => {\r\n        alertContext.openAlert(AlertType.success, 'Pomyślnie zaktualizowano pracownika');\r\n        history.push('/admin/employees');\r\n      })\r\n      .catch((err) => alertContext.openAlert(AlertType.warning, err));\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Container maxWidth='sm' component='main'>\r\n      <CssBaseline />\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <EditIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Edytuj Profil Pracownika\r\n        </Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            firstName: currentEmp.firstName,\r\n            lastName: currentEmp.lastName,\r\n            email: currentEmp.email,\r\n            password: currentEmp.password,\r\n            repeatPassword: currentEmp.repeatPassword,\r\n            setEmployee: currentEmp.setEmployee,\r\n            departmentId: currentEmp.Employee.departmentId,\r\n            degreeId: currentEmp.Employee.degreeId,\r\n            telephone: currentEmp.Employee.telephone,\r\n            room: currentEmp.Employee.room\r\n          }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            updateEmp(data);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={UserSchema}\r\n        >\r\n          {({ values, isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='firstName' type='input' as={TextField} placeholder='Imię' />\r\n              <MyTextField name='lastName' type='input' as={TextField} placeholder='Nazwisko' />\r\n              <MyTextField name='email' type='input' as={TextField} placeholder='Email' />\r\n              <MyTextField name='telephone' type='input' as={TextField} placeholder='Telefon kontaktowy' />\r\n              <MyTextField name='room' type='input' as={TextField} placeholder='Numer pokoju' />\r\n              <MyTextField name='password' type='input' as={TextField} placeholder='Nowe Hasło' />\r\n              <MyTextField name='repeatPassword' type='input' as={TextField} placeholder='Powtórz Hasło' />\r\n              <FormControlLabel label='Pracownik?' control={<Field name='setEmployee' as={Checkbox} type='checkbox' />} />\r\n              <FormControl>\r\n                <InputLabel htmlFor='departmentId'>Katedra</InputLabel>\r\n                <Field name='departmentId' type='select' as={NativeSelect}>\r\n                  <option value=''></option>\r\n                  {departmentList?.map((department) => (\r\n                    <option value={department.id} key={department.id}>\r\n                      {department.name}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </FormControl>\r\n              <FormControl>\r\n                <InputLabel htmlFor='degreeId'>Tytuł Naukowy</InputLabel>\r\n                <Field name='degreeId' type='select' as={NativeSelect}>\r\n                  <option value=''></option>\r\n                  {degreesList?.map((degree) => (\r\n                    <option value={degree.id} key={degree.id}>\r\n                      {degree.name}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </FormControl>\r\n              <Button type='submit' variant='contained' disabled={isSubmitting} color='primary'>\r\n                Aktualizuj\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\nexport default UpdateEmployee;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Department\\index.tsx",["625"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getData, putData } from '../../../../api/index';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { IDepartment } from '../../types';\r\nimport { DepartmentSchema } from '../../schemas';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Button, TextField, Paper, Container, Avatar, Typography, CssBaseline } from '@material-ui/core';\r\nimport { Formik, Form } from 'formik';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { Params } from '../../../../utils/types';\r\nimport useStyles from '../../styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst UpdateDepartment: React.FC = () => {\r\n  const context = useAlertContext();\r\n  const { id } = useParams<Params>();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [currentDepartment, setCurrentDepartment] = useState<IDepartment>({ name: '', english_name: '', id: 0 });\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    getDepartment();\r\n  }, []);\r\n  const updateDepartment = async (values: IDepartment) => {\r\n    await putData('departments/' + id, getAccessToken(), values)\r\n      .then(() => {\r\n        context.openAlert(AlertType.success, 'Pomyślnie zaktualizowano nową katedrę w bazie!');\r\n        history.push('/admin/departments');\r\n      })\r\n      .catch((err) => context.openAlert(AlertType.warning, err));\r\n  };\r\n  const getDepartment = async () => {\r\n    const data = await getData('departments/' + id, getAccessToken());\r\n    setCurrentDepartment(data);\r\n    setLoading(false);\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container maxWidth='sm' component='main'>\r\n      <CssBaseline />\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AddIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Dodaj Katedrę\r\n        </Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{ name: currentDepartment.name, english_name: currentDepartment.english_name, id: currentDepartment.id }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            updateDepartment(data);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={DepartmentSchema}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='name' type='input' as={TextField} placeholder='Nazwa' />\r\n              <MyTextField name='english_name' type='input' as={TextField} placeholder='Przetłumaczona nazwa' />\r\n              <Button type='submit' variant='contained' disabled={isSubmitting} color='primary'>\r\n                Aktualizuj Katedrę\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateDepartment;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Auth\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\WorkshopType\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\Machine\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\Department\\index.tsx",["626"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { postData } from '../../../../api/index';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { IDepartment } from '../../types';\r\nimport { DepartmentSchema } from '../../schemas';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport { Button, TextField, Paper, Container, Avatar, Typography, CssBaseline } from '@material-ui/core';\r\nimport { Formik, Form } from 'formik';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport useStyles from '../../styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst NewDepartment: React.FC = () => {\r\n  const context = useAlertContext();\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const createDepartment = async (values: IDepartment) => {\r\n    await postData('departments', getAccessToken(), values)\r\n      .then((res) => {\r\n        context.openAlert(AlertType.success, 'Pomyślnie dodano nową katedrę do bazy!');\r\n        history.push('/admin/departments');\r\n      })\r\n      .catch((err) => {\r\n        context.openAlert(AlertType.warning, 'Coś poszło nie tak.');\r\n      });\r\n  };\r\n  return (\r\n    <Container maxWidth='sm' component='main'>\r\n      <CssBaseline />\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AddIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Dodaj Katedrę\r\n        </Typography>\r\n\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{ name: '', english_name: '', id: 0 }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            createDepartment(data);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={DepartmentSchema}\r\n        >\r\n          {({ values, isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='name' type='input' as={TextField} placeholder='Nazwa' />\r\n              <MyTextField name='english_name' type='input' as={TextField} placeholder='Przetłumaczona nazwa' />\r\n              <Button type='submit' variant='contained' disabled={isSubmitting} color='primary'>\r\n                Dodaj Katedrę\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewDepartment;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\Workshop\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\Lab\\index.tsx",["627"],"import React, { useState, useEffect } from 'react';\r\nimport { postData, getData } from '../../../../api/index';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { LabSchema } from '../../schemas';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport { Button, TextField, Container, InputLabel, FormControl, Paper, Avatar, Typography, CssBaseline, NativeSelect } from '@material-ui/core';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { IEmployee } from '../../types';\r\nimport useStyles from '../../styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst NewLab: React.FC = () => {\r\n  const classes = useStyles();\r\n  const context = useAlertContext();\r\n  const history = useHistory();\r\n  const [employees, setEmployees] = useState<IEmployee[]>([]);\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, []);\r\n  const createLab = async (values: any) => {\r\n    await postData('labs', getAccessToken(), values)\r\n      .then((res) => {\r\n        context.openAlert(AlertType.success, 'Pomyślnie dodano nowe laboratorium do bazy!');\r\n        history.push('/admin/labs');\r\n      })\r\n      .catch((err) => context.openAlert(AlertType.warning, 'Coś poszło nie tak.'));\r\n  };\r\n  const getEmployees = async () => {\r\n    const data = await getData('employees/list', getAccessToken());\r\n    setEmployees(data);\r\n  };\r\n  return (\r\n    <Container maxWidth='sm' component='main'>\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AddIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Dodaj Laboratorium\r\n        </Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{ name: '', english_name: '', employeeId: '', id: 0 }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            createLab(data);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={LabSchema}\r\n        >\r\n          {({ values, isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='name' type='input' as={TextField} placeholder='Nazwa' />\r\n              <MyTextField name='english_name' type='input' as={TextField} placeholder='Przetłumaczona nazwa' />\r\n              <FormControl>\r\n                <InputLabel shrink htmlFor='employeeId'>\r\n                  Pracownik{' '}\r\n                </InputLabel>\r\n                <Field name='employeeId' type='select' as={NativeSelect}>\r\n                  <option value=''>wybierz pracownika</option>\r\n                  {employees.map((emp) => (\r\n                    <option value={emp.Employee.id} key={emp.Employee.id}>\r\n                      {emp.firstName} {emp.lastName}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </FormControl>\r\n              <Button type='submit' variant='contained' disabled={isSubmitting} color='primary'>\r\n                Stwórz Laboratorium\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewLab;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\schemas.ts",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Machine\\MachineList.tsx",["628"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\styles.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Buttons\\ImageUploadButton.tsx",["629"],"import React from 'react';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport { Button } from '@material-ui/core';\r\ninterface Props {\r\n  inputImage: React.RefObject<HTMLInputElement>;\r\n  handleChange: () => void;\r\n  currentPhoto: string;\r\n}\r\n\r\nconst ImageUploadButton: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className='image-container'>\r\n      <img src={props.currentPhoto} className='image-preview' />\r\n      <Button variant='outlined' component='label' color='secondary' endIcon={<ImageIcon />}>\r\n        Nowe zdjęcie\r\n        <input type='file' style={{ display: 'none' }} accept='image/png' ref={props.inputImage} onChange={props.handleChange} />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadButton;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Buttons\\NewResourceButton.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\WorkshopType\\WorkshopTypeList.tsx",["630"],"import React, { useState, useEffect } from 'react';\r\nimport { getData, deleteData } from '../../../../api/index';\r\nimport { DataGrid, ColDef, CellParams } from '@material-ui/data-grid';\r\nimport MyButtonGroup from '../../../Shared/Groups/MyButtonGroup';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { IWorkshop } from '../../types';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nconst WorkshopTypeList: React.FC = () => {\r\n  const context = useAlertContext();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [workshopTypes, setWorkshopTypes] = useState<IWorkshop[]>([]);\r\n  useEffect(() => {\r\n    getWorkshopTypes();\r\n  }, []);\r\n  const getWorkshopTypes = async () => {\r\n    await getData('workshopTypes/', getAccessToken())\r\n      .then((res) => {\r\n        setWorkshopTypes(res);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n  const clickDelete = async (id: any) => {\r\n    await deleteData('workshopTypes/' + id, getAccessToken());\r\n    context.openAlert(AlertType.success, 'Pomyślnie usunięto typ pracowni z bazy!');\r\n    getWorkshopTypes();\r\n  };\r\n  const columns: ColDef[] = [\r\n    { field: 'id', headerName: 'Identyfikator', width: 130 },\r\n    { field: 'name', headerName: 'Nazwa', width: 130 },\r\n    { field: 'english_name', headerName: 'Prztłumaczona Nazwa', width: 130 },\r\n    { field: 'symbol', headerName: 'Skrót', width: 130 },\r\n    {\r\n      field: '',\r\n      headerName: 'Edytuj/Usuń',\r\n      width: 250,\r\n      disableClickEventBubbling: true,\r\n      renderCell: (params: CellParams) => {\r\n        const onClick = () => {\r\n          console.log(params.row.id);\r\n        };\r\n        return (\r\n          <MyButtonGroup\r\n            deleteCB={() => {\r\n              clickDelete(params.row.id);\r\n            }}\r\n            editLink={'/admin/update_workshop_type/' + params.row.id}\r\n            modalBody='Czy na pewmo chcesz usunąć typ pracowni z bazy?'\r\n            modalTitle='Usuń typ pracowni'\r\n          />\r\n        );\r\n      }\r\n    }\r\n  ];\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={workshopTypes} columns={columns} pageSize={10} rowHeight={45} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkshopTypeList;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Department\\DepartmentList.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Workshop\\WorkshopList.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Lab\\LabList.tsx",["631","632"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getData, deleteData } from '../../../../api/index';\r\nimport MyButtonGroup from '../../../Shared/Groups/MyButtonGroup';\r\nimport { DataGrid, ColDef, CellParams } from '@material-ui/data-grid';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { ILab } from '../../types';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nconst LabList: React.FC = () => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [labs, setLabs] = useState<ILab[]>([]);\r\n  const context = useAlertContext();\r\n  useEffect(() => {\r\n    getLabs();\r\n  }, []);\r\n  const getLabs = async () => {\r\n    const response = await getData('labs', getAccessToken())\r\n      .then((res) => {\r\n        setLabs(res);\r\n      })\r\n      .catch((err) => {\r\n        context.openAlert(AlertType.error, 'oops! coś poszło nie tak');\r\n      });\r\n    setLoading(false);\r\n  };\r\n  const clickDelete = async (id: any) => {\r\n    console.log(id);\r\n    await deleteData('labs/' + id, getAccessToken());\r\n    getLabs();\r\n    context.openAlert(AlertType.success, 'Pomyślnie usunięto laboratorium z bazy!');\r\n  };\r\n  const columns: ColDef[] = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'Identyfikator',\r\n      width: 130,\r\n      renderCell: (params: CellParams) => {\r\n        return <Link to={'/admin/lab/' + params.row.id}>{params.row.id}</Link>;\r\n      }\r\n    },\r\n    { field: 'name', headerName: 'Nazwa', width: 130 },\r\n    { field: 'english_name', headerName: 'Name', width: 130 },\r\n    { field: 'employeeId', headerName: 'Pracownik', width: 110 },\r\n    {\r\n      field: '',\r\n      headerName: 'Edytuj/Usuń',\r\n      width: 250,\r\n      disableClickEventBubbling: true,\r\n      renderCell: (params: CellParams) => {\r\n        return (\r\n          <MyButtonGroup\r\n            deleteCB={() => {\r\n              clickDelete(params.row.id);\r\n            }}\r\n            editLink={'/admin/update_lab/' + params.row.id}\r\n            modalBody='Czy na pewmo chcesz usunąć to laboratorium z bazy?'\r\n            modalTitle='Usuń laboratorium'\r\n          />\r\n        );\r\n      }\r\n    }\r\n  ];\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div style={{ height: 700 }}>\r\n      <DataGrid rows={labs} columns={columns} pageSize={20} rowHeight={45} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabList;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Groups\\Pagination.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Groups\\SearchData.tsx",["633","634","635","636","637"],"import React, { useState } from 'react';\r\nimport { Input, IconButton, InputAdornment, FormControl, InputLabel } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\ninterface Props {\r\n  searchFunction: (e: React.SyntheticEvent, searchValue: string | undefined) => void;\r\n}\r\n\r\nconst SearchData: React.FC<Props> = ({ searchFunction }) => {\r\n  const [searchInput, setSearchInput] = useState('');\r\n  return (\r\n    <form\r\n      onSubmit={(e: React.SyntheticEvent) => {\r\n        searchFunction(e, searchInput);\r\n      }}\r\n    >\r\n      <input\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n          setSearchInput(e.target.value);\r\n        }}\r\n        id='header-search'\r\n        placeholder='Szukaj informacji'\r\n      />\r\n      <button type='submit'>\r\n        <SearchIcon style={{ color: 'white' }} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchData;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Search\\index.tsx",["638","639","640","641"],"import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Container } from '@material-ui/core';\r\nimport queryString from 'query-string';\r\nimport { getData } from '../../../../api/index';\r\nimport Pagination from '../../../Shared/Groups/Pagination';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport MyCard from '../Labs/MyCard';\r\nexport interface CardProps {\r\n  name: string;\r\n  secondName: string;\r\n  link: string;\r\n}\r\nconst SearchResources: React.FC = () => {\r\n  const { search } = useLocation();\r\n  const query = queryString.parse(search);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [nameSearch, setNameSearch] = useState(() => {\r\n    return query.q === undefined ? '' : query.q;\r\n  });\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [elementsPerPage, setElementsPerPage] = useState(20);\r\n  const [resources, setResources] = useState<CardProps[]>([]);\r\n  useEffect(() => {\r\n    getResources();\r\n  }, [search]);\r\n  const getResources = async () => {\r\n    await getData(`utils/search${search}`, getAccessToken())\r\n      .then((res) => {\r\n        let tempResources: CardProps[] = [];\r\n        tempResources.push(\r\n          ...res[0].map((item: any) => {\r\n            return { name: item.name, secondName: item.secondName, link: '/kadra/' + item.id };\r\n          })\r\n        );\r\n        tempResources.push(\r\n          ...res[1].map((item: any) => {\r\n            return { name: item.name, secondName: item.secondName, link: '/maszyny/' + item.id };\r\n          })\r\n        );\r\n        tempResources.push(\r\n          ...res[2].map((item: any) => {\r\n            return { name: item.name, secondName: item.secondName, link: '/pracownie/' + item.id };\r\n          })\r\n        );\r\n        tempResources.push(\r\n          ...res[3].map((item: any) => {\r\n            return { name: item.name, secondName: item.secondName, link: '/laboratoria/' + item.id };\r\n          })\r\n        );\r\n        console.log(tempResources);\r\n        setResources(tempResources);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setLoading(false);\r\n  };\r\n  const paginate = (page: number) => setCurrentPage(page);\r\n  const indexOfLastPost = currentPage * elementsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - elementsPerPage;\r\n  const currentElements = resources.slice(indexOfFirstPost, indexOfLastPost);\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container maxWidth='xl'>\r\n      <p>\r\n        Wynik wyszukiwania: <b>{query.q !== undefined && query.q}</b>\r\n      </p>\r\n      <div className='resource-grid'>\r\n        {currentElements.map((res: CardProps) => (\r\n          <MyCard key={Math.random()} name={res.name} english_name={res.secondName} link={res.link} />\r\n        ))}\r\n      </div>\r\n      <Pagination paginate={paginate} totalElements={resources.length} elementsPerPage={elementsPerPage} currentPage={currentPage} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchResources;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Search\\SearchBar.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Main\\Resources\\Search\\SearchCard.tsx",[],["642","643"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Degree\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Create\\Degree\\index.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Update\\Degree\\index.tsx",["644"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getData, putData } from '../../../../api/index';\r\nimport { getAccessToken } from '../../../../utils/api/accessToken';\r\nimport { IDegree } from '../../types';\r\nimport { DegreeSchema } from '../../schemas';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Button, TextField, Paper, Container, Avatar, Typography, CssBaseline } from '@material-ui/core';\r\nimport { Formik, Form } from 'formik';\r\nimport { useAlertContext, AlertType } from '../../../../context/AlertContext';\r\nimport MyTextField from '../../../Shared/Inputs/MyTextField';\r\nimport { Params } from '../../../../utils/types';\r\nimport useStyles from '../../styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst UpdateDegree: React.FC = () => {\r\n  const context = useAlertContext();\r\n  const { id } = useParams<Params>();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [currentDegree, setCurrentDegree] = useState<IDegree>({ name: '', id: 0 });\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    getDegree();\r\n  }, []);\r\n  const updateDegree = async (values: IDegree) => {\r\n    await putData('degrees/' + id, getAccessToken(), values)\r\n      .then(() => {\r\n        context.openAlert(AlertType.success, 'Pomyślnie zaktualizowano nowy tytuł w bazie!');\r\n        history.push('/admin/degrees');\r\n      })\r\n      .catch((err) => context.openAlert(AlertType.warning, err));\r\n  };\r\n  const getDegree = async () => {\r\n    const data = await getData('degrees/' + id, getAccessToken());\r\n    setCurrentDegree(data);\r\n    setLoading(false);\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container maxWidth='sm' component='main'>\r\n      <CssBaseline />\r\n      <Paper elevation={6} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AddIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Dodaj Katedrę\r\n        </Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{ name: currentDegree.name, id: currentDegree.id }}\r\n          onSubmit={(data, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            updateDegree(data);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={DegreeSchema}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form className='form-grid'>\r\n              <MyTextField name='name' type='input' as={TextField} placeholder='Nazwa' />\r\n              <Button type='submit' variant='contained' disabled={isSubmitting} color='primary'>\r\n                Aktualizuj Tytuł naukowy\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateDegree;\r\n","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Admin\\Read\\Degree\\DegreeList.tsx",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\ProfileCalendar.js",["645","646"],"import React, { useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Container, CircularProgress } from '@material-ui/core';\r\nimport { Calendar  } from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport {messages,localizer} from './constants'\r\n\r\nconst ProfileCalendar = ({ ownedReservations, supervisedReservations })=>{\r\n    const history = useHistory();\r\n    const [reservations, setReservations] = useState([]);\r\n    useEffect(() => {\r\n        formatReservations();\r\n      }, []);\r\n    const formatReservations = ()=>{\r\n        let eventInputReservations = [];\r\n        ownedReservations.forEach((item) => {\r\n          eventInputReservations.push({ start: new Date(item.start_date), end: new Date(item.end_date), id: item.id, title:'Własna'  });\r\n        });\r\n        supervisedReservations.forEach((item) => {\r\n          eventInputReservations.push({ start: new Date(item.start_date), end: new Date(item.end_date), id: item.id, title:'Nadzorowana' });\r\n        });\r\n        setReservations(eventInputReservations)\r\n    }\r\n    return (<Container maxWidth='xl'>\r\n         <Calendar\r\n          popup\r\n          culture={\"pl\"}\r\n          localizer={localizer}\r\n          events={reservations}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          style={{ height: 800 }}\r\n          views={['month', 'agenda']}\r\n          defaultView='month'\r\n          messages={messages}\r\n          onSelectEvent={(event,e)=>{\r\n              console.log(event)\r\n              history.push('/rezerwacje/' + event.id);\r\n          }}\r\n    />\r\n    </Container>)\r\n}\r\nexport default ProfileCalendar;",["647","648"],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\constants.js",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\WorkshopCalendar.js",["649","650","651"],"import React,{useEffect,useState,useRef} from \"react\";\r\nimport { getData } from '../../../api/index';\r\nimport { CircularProgress} from '@material-ui/core';\r\nimport { getAccessToken } from '../../../utils/api/accessToken';\r\nimport {localizer,messages} from './constants'\r\nimport { Calendar,Views  } from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nconst WorkshopCalendar = ({id})=>{\r\n    const [loading, setLoading] = useState(true); \r\n    const [events,setEvents] = useState([])\r\n    const [resources,setResources] = useState([])\r\n    useEffect(()=>{\r\n        getCalendarData()\r\n    },[])\r\n    const getCalendarData = async()=>{\r\n        await getData('workshops/reservations/'+id,getAccessToken())\r\n        .then(response=>{\r\n            let tempEvents =[],tempResources=[];\r\n            response.forEach(machine=>{\r\n                tempResources.push({ resourceId: machine.id, resourceTitle: machine.name });\r\n                machine.Reservations.forEach(reservation=>{\r\n                    tempEvents.push({\r\n                        start: new Date(reservation.start_date),\r\n                        end: new Date(reservation.end_date),\r\n                        id: reservation.id,\r\n                        resourceId:machine.id,\r\n                        title: 'Rezerwacja'\r\n                    })\r\n                })\r\n            })\r\n            setResources(tempResources);\r\n            setEvents(tempEvents);\r\n            setLoading(false)\r\n        })\r\n        .catch(err=>console.log(err));\r\n    }\r\n    if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n    return (\r\n        <div>\r\n            <Calendar\r\n                culture={\"pl\"}\r\n                localizer={localizer}\r\n                events={events}\r\n                resources={resources}\r\n                step={60}\r\n                defaultDate={new Date()}\r\n                style={{ height: 800 }}\r\n                defaultView='day'\r\n                views={['day', 'work_week']}\r\n                messages={messages}\r\n                resourceIdAccessor=\"resourceId\"\r\n                resourceTitleAccessor=\"resourceTitle\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkshopCalendar","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\MachineCalendar.js",["652","653"],"import React,{useEffect,useState,useRef} from \"react\";\r\nimport { getData,postData } from '../../../api/index';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getAccessToken } from '../../../utils/api/accessToken';\r\nimport { Calendar  } from 'react-big-calendar'\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { useAlertContext, AlertType } from '../../../context/AlertContext';\r\nimport MyDateTimePicker from '../Inputs/MyDateTimePicker';\r\nimport { Roles } from '../../../utils/constants';\r\nimport { ReservationSchema } from '../../Main/schemas';\r\nimport { Button, Container, CircularProgress, Typography, TextField, Paper } from '@material-ui/core';\r\nimport useStyles from '../styles';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport {messages,localizer} from './constants'\r\nimport {dateRangeOverlaps,calculateEndDate} from './helpers'\r\n\r\nconst MachineCalendar = ({isMachineActive,maxUnit,id,timeUnit,roles})=>{\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const formRef = useRef(null);\r\n    const alertContext = useAlertContext();\r\n    const [loading, setLoading] = useState(true);\r\n    const [reservations, setReservations] = useState([]);\r\n    useEffect(() => {\r\n        getReservations();\r\n      }, []);\r\n      const getReservations = async () => {\r\n        const response = await getData('machines/rent/' + id, getAccessToken());\r\n        let tempReservations = response.map((item) => {\r\n            return {\r\n              start: new Date(item.start_date),\r\n              end: new Date(item.end_date),\r\n              id: item.id,\r\n              title: item.Employee.User.lastName + ' ' + item.Employee.User.firstName\r\n            };\r\n          });\r\n        setReservations(tempReservations);\r\n        setLoading(false);\r\n      }\r\n      const newReservation = async (data) => {\r\n        data.machineId = id;\r\n        await postData('rental/', getAccessToken(), { start_date: data.start_date, end_date: data.end_date, machineId: data.machineId })\r\n          .then((res) => {\r\n            alertContext.openAlert(AlertType.success, 'Pomyślnie wysłano prośbę o rezerwację!');\r\n            history.push('/moje_konto/rezerwacje');\r\n          })\r\n          .catch((err) => {\r\n            alertContext.openAlert(AlertType.error, 'Wystąpił problem. Prosimy spróbować później.');\r\n          });\r\n        await getReservations();\r\n      };\r\n      const checkDates = (data) => {\r\n        let statusMessage = '';\r\n        data.end_date = calculateEndDate(data.unitCount, data.start_date,timeUnit);\r\n        let reservationsArrayLength = reservations.length;\r\n        for(let i=0;i<reservationsArrayLength;i++){\r\n          statusMessage=dateRangeOverlaps(new Date(data.start_date), new Date(data.end_date),new Date(reservations[i].start),new Date(reservations[i].end));\r\n          if(statusMessage!=='') {\r\n            return statusMessage\r\n          }\r\n        }\r\n        return statusMessage;\r\n      };\r\n      if (loading)\r\n      return (\r\n        <div>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n\r\n    return (<Container maxWidth='xl'>\r\n      {roles.indexOf(Roles.employee) !== -1 && (\r\n        <div className=\"rent-form\">\r\n          <Typography variant='h5'>Zarezerwuj Maszynę</Typography>\r\n          <Formik\r\n            validateOnChange={true}\r\n            validationSchema={ReservationSchema}\r\n            initialValues={{ start_date: new Date(), unitCount: 0 }}\r\n            onSubmit={(data, { setSubmitting, setErrors }) => {\r\n              setSubmitting(true);\r\n              let errorMessage = checkDates(data);\r\n              errorMessage!==''?setErrors({ start_date: errorMessage, unitCount: '' }):newReservation(data);\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({ values, isSubmitting, errors }) => (\r\n              <Form ref={formRef} className={classes.rentForm}>\r\n                <MyDateTimePicker name='start_date' id='start-date' disabled={!isMachineActive} />\r\n                <Typography variant='body1'>\r\n                  Jednostka czasu: <b>{timeUnit} min</b> - Max ilość jednostek: <b>{maxUnit}</b>\r\n                </Typography>\r\n                <Field\r\n                  name='unitCount'\r\n                  as={TextField}\r\n                  type='number'\r\n                  InputProps={{ inputProps: { min: 1, max: maxUnit, name: 'unitCount' } }}\r\n                  placeholder='Liczba jednostek'\r\n                  className={classes.wideSelect}\r\n                />\r\n                {/* <MyDateTimePicker name='end_date' id='end-date' disabled /> */}\r\n                <Button type='submit' variant='contained' color='secondary' disabled={isSubmitting || !isMachineActive}>\r\n                  Rezerwuj\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      )}\r\n    <Calendar\r\n    culture={\"pl\"}\r\n      localizer={localizer}\r\n      events={reservations}\r\n      startAccessor=\"start\"\r\n      endAccessor=\"end\"\r\n      style={{ height: 800 }}\r\n      defaultView='week'\r\n        messages={messages}\r\n        onSelectEvent={(event,e)=>{\r\n            console.log(event)\r\n            history.push('/rezerwacje/' + event.id);\r\n        }}\r\n    />\r\n  </Container>);\r\n    \r\n}\r\nexport default MachineCalendar;","C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\helpers.js",[],"C:\\Users\\User\\VSCode\\piwubwlu_client\\src\\components\\Shared\\Calendar\\UpdateResCalendar.jsx",["654","655","656"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Container, CircularProgress, Typography, TextField, Paper } from '@material-ui/core';\r\nimport { getData,putData } from '../../../api/index';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Calendar  } from 'react-big-calendar'\r\nimport { getAccessToken } from '../../../utils/api/accessToken';\r\nimport { useAlertContext, AlertType } from '../../../context/AlertContext';\r\nimport MyDateTimePicker from '../Inputs/MyDateTimePicker';\r\nimport { ReservationSchema } from '../../Main/schemas';\r\nimport {messages,localizer} from './constants'\r\nimport { Formik, Form, Field } from 'formik';\r\nimport {dateRangeOverlaps,calculateEndDate} from './helpers'\r\nimport useStyles from '../styles';\r\n\r\n\r\nconst UpdateResCalendar = ({ id, isMachineActive, maxUnit, timeUnit, startDate, endDate, machineId, state }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const alertContext = useAlertContext();\r\n  const formRef = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [reservations, setReservations] = useState();\r\n  useEffect(() => {\r\n    getReservations();\r\n  }, []);\r\n  const getReservations = async () => {\r\n    const response = await getData('machines/rent/' + machineId, getAccessToken());\r\n    let tempReservations = [];\r\n    tempReservations.push({\r\n      start: new Date(startDate),\r\n      end: new Date(endDate),\r\n      id: id,\r\n      title: `Stan mojej rezerwacji: ${state}`\r\n    });\r\n    response.map((item) => {\r\n      if (item.id !== id) {\r\n        tempReservations.push({\r\n          start: new Date(item.start_date),\r\n          end: new Date(item.end_date),\r\n          id: item.id,\r\n          title: item.Employee.User.lastName + ' ' + item.Employee.User.firstName\r\n        });\r\n      }\r\n    });\r\n    setReservations(tempReservations);\r\n    setLoading(false);\r\n  };\r\n  const checkDates = (data) => {\r\n    let statusMessage = '';\r\n        data.end_date = calculateEndDate(data.unitCount, data.start_date,timeUnit);\r\n        let reservationsArrayLength = reservations.length;\r\n        for(let i=0;i<reservationsArrayLength;i++){\r\n          if(reservations[i].id !== id ) statusMessage=dateRangeOverlaps(new Date(data.start_date), new Date(data.end_date),new Date(reservations[i].start),new Date(reservations[i].end));\r\n          if(statusMessage!=='') {\r\n            return statusMessage\r\n          }\r\n        }\r\n        return statusMessage;\r\n  };\r\n  const updateReservation = async (data) => {\r\n    data.machineId = machineId;\r\n    await putData('rental/' + id, getAccessToken(), { start_date: data.start_date, end_date: data.end_date, machineId: data.machineId })\r\n      .then((res) => {\r\n        alertContext.openAlert(AlertType.success, 'Pomyślnie wysłano prośbę o rezerwację!');\r\n        history.push('/moje_konto/rezerwacje');\r\n      })\r\n      .catch((err) => {\r\n        alertContext.openAlert(AlertType.error, 'Wystąpił problem. Prosimy spróbować później.');\r\n      });\r\n    await getReservations();\r\n  };\r\n  const calcTimeUnits = () => {\r\n    const endMinutes = new Date(endDate).getTime() / 60000;\r\n    const startMinutes = new Date(startDate).getTime() / 60000;\r\n    let minutes = endMinutes - startMinutes;\r\n    return minutes / +timeUnit;\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container maxWidth='lg'>\r\n      <div className=\"rent-form\">\r\n        <Typography variant='h5'>Edytuj swoją rezerwację</Typography>\r\n        <Formik\r\n          validateOnChange={true}\r\n          validationSchema={ReservationSchema}\r\n          initialValues={{ start_date: new Date(startDate), unitCount: calcTimeUnits() }}\r\n          onSubmit={(data, { setSubmitting, setErrors }) => {\r\n            setSubmitting(true);\r\n            let errorMessage = checkDates(data);\r\n              errorMessage!==''?setErrors({ start_date: errorMessage, unitCount: '' }):updateReservation(data);\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form ref={formRef} className={classes.rentForm}>\r\n              <MyDateTimePicker name='start_date' id='start-date' disabled={!isMachineActive} />\r\n              <Typography variant='body1'>\r\n                Jednostka czasu: <b>{timeUnit} min</b> - Max ilość jednostek: <b>{maxUnit}</b>\r\n              </Typography>\r\n              <Field\r\n                name='unitCount'\r\n                as={TextField}\r\n                type='number'\r\n                InputProps={{ inputProps: { min: 1, max: maxUnit, name: 'unitCount' } }}\r\n                placeholder='Liczba jednostek'\r\n                className={classes.wideSelect}\r\n              />\r\n              <Button type='submit' variant='contained' color='secondary' disabled={isSubmitting || !isMachineActive}>\r\n                Edytuj Rezerwację\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      <Calendar\r\n      culture={\"pl\"}\r\n      localizer={localizer}\r\n      events={reservations}\r\n      startAccessor=\"start\"\r\n      endAccessor=\"end\"\r\n      style={{ height: 800 }}\r\n      defaultView='week'\r\n        messages={messages}\r\n        onSelectEvent={(event,e)=>{\r\n            console.log(event)\r\n            history.push('/rezerwacje/' + event.id);\r\n        }}\r\n    />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateResCalendar;\r\n",{"ruleId":"657","replacedBy":"658"},{"ruleId":"659","replacedBy":"660"},{"ruleId":"661","severity":1,"message":"662","line":11,"column":6,"nodeType":"663","endLine":11,"endColumn":8,"suggestions":"664"},{"ruleId":"665","severity":1,"message":"666","line":60,"column":8,"nodeType":"667","messageId":"668","endLine":60,"endColumn":20},{"ruleId":"665","severity":1,"message":"669","line":62,"column":8,"nodeType":"667","messageId":"668","endLine":62,"endColumn":19},{"ruleId":"665","severity":1,"message":"670","line":63,"column":8,"nodeType":"667","messageId":"668","endLine":63,"endColumn":18},{"ruleId":"665","severity":1,"message":"671","line":65,"column":8,"nodeType":"667","messageId":"668","endLine":65,"endColumn":21},{"ruleId":"665","severity":1,"message":"672","line":2,"column":27,"nodeType":"667","messageId":"668","endLine":2,"endColumn":33},{"ruleId":"665","severity":1,"message":"672","line":2,"column":27,"nodeType":"667","messageId":"668","endLine":2,"endColumn":33},{"ruleId":"665","severity":1,"message":"673","line":2,"column":10,"nodeType":"667","messageId":"668","endLine":2,"endColumn":24},{"ruleId":"665","severity":1,"message":"674","line":2,"column":26,"nodeType":"667","messageId":"668","endLine":2,"endColumn":34},{"ruleId":"665","severity":1,"message":"675","line":6,"column":10,"nodeType":"667","messageId":"668","endLine":6,"endColumn":19},{"ruleId":"665","severity":1,"message":"676","line":15,"column":9,"nodeType":"667","messageId":"668","endLine":15,"endColumn":21},{"ruleId":"657","replacedBy":"677"},{"ruleId":"659","replacedBy":"678"},{"ruleId":"665","severity":1,"message":"679","line":3,"column":44,"nodeType":"667","messageId":"668","endLine":3,"endColumn":58},{"ruleId":"665","severity":1,"message":"680","line":27,"column":9,"nodeType":"667","messageId":"668","endLine":27,"endColumn":16},{"ruleId":"665","severity":1,"message":"681","line":28,"column":9,"nodeType":"667","messageId":"668","endLine":28,"endColumn":16},{"ruleId":"661","severity":1,"message":"682","line":17,"column":6,"nodeType":"663","endLine":17,"endColumn":8,"suggestions":"683"},{"ruleId":"665","severity":1,"message":"684","line":19,"column":11,"nodeType":"667","messageId":"668","endLine":19,"endColumn":14},{"ruleId":"665","severity":1,"message":"685","line":3,"column":10,"nodeType":"667","messageId":"668","endLine":3,"endColumn":17},{"ruleId":"665","severity":1,"message":"686","line":9,"column":9,"nodeType":"667","messageId":"668","endLine":9,"endColumn":24},{"ruleId":"665","severity":1,"message":"687","line":14,"column":9,"nodeType":"667","messageId":"668","endLine":14,"endColumn":19},{"ruleId":"688","severity":1,"message":"689","line":27,"column":13,"nodeType":"690","endLine":27,"endColumn":166},{"ruleId":"661","severity":1,"message":"691","line":19,"column":6,"nodeType":"663","endLine":19,"endColumn":8,"suggestions":"692"},{"ruleId":"665","severity":1,"message":"693","line":20,"column":27,"nodeType":"667","messageId":"668","endLine":20,"endColumn":45},{"ruleId":"661","severity":1,"message":"694","line":25,"column":6,"nodeType":"663","endLine":25,"endColumn":14,"suggestions":"695"},{"ruleId":"665","severity":1,"message":"696","line":9,"column":8,"nodeType":"667","messageId":"668","endLine":9,"endColumn":24},{"ruleId":"665","severity":1,"message":"693","line":20,"column":27,"nodeType":"667","messageId":"668","endLine":20,"endColumn":45},{"ruleId":"661","severity":1,"message":"694","line":25,"column":6,"nodeType":"663","endLine":25,"endColumn":14,"suggestions":"697"},{"ruleId":"665","severity":1,"message":"698","line":12,"column":10,"nodeType":"667","messageId":"668","endLine":12,"endColumn":17},{"ruleId":"665","severity":1,"message":"699","line":1,"column":38,"nodeType":"667","messageId":"668","endLine":1,"endColumn":44},{"ruleId":"665","severity":1,"message":"700","line":3,"column":42,"nodeType":"667","messageId":"668","endLine":3,"endColumn":53},{"ruleId":"665","severity":1,"message":"701","line":3,"column":55,"nodeType":"667","messageId":"668","endLine":3,"endColumn":65},{"ruleId":"702","severity":1,"message":"703","line":51,"column":44,"nodeType":"704","messageId":"705","endLine":51,"endColumn":46},{"ruleId":"665","severity":1,"message":"684","line":40,"column":11,"nodeType":"667","messageId":"668","endLine":40,"endColumn":14},{"ruleId":"665","severity":1,"message":"706","line":6,"column":47,"nodeType":"667","messageId":"668","endLine":6,"endColumn":53},{"ruleId":"665","severity":1,"message":"707","line":5,"column":67,"nodeType":"667","messageId":"668","endLine":5,"endColumn":78},{"ruleId":"661","severity":1,"message":"708","line":23,"column":6,"nodeType":"663","endLine":23,"endColumn":8,"suggestions":"709"},{"ruleId":"710","severity":1,"message":"711","line":42,"column":7,"nodeType":"690","endLine":42,"endColumn":43},{"ruleId":"710","severity":1,"message":"711","line":30,"column":7,"nodeType":"690","endLine":30,"endColumn":43},{"ruleId":"665","severity":1,"message":"712","line":3,"column":73,"nodeType":"667","messageId":"668","endLine":3,"endColumn":89},{"ruleId":"665","severity":1,"message":"713","line":3,"column":91,"nodeType":"667","messageId":"668","endLine":3,"endColumn":99},{"ruleId":"665","severity":1,"message":"714","line":2,"column":21,"nodeType":"667","messageId":"668","endLine":2,"endColumn":31},{"ruleId":"665","severity":1,"message":"715","line":4,"column":8,"nodeType":"667","messageId":"668","endLine":4,"endColumn":14},{"ruleId":"665","severity":1,"message":"680","line":7,"column":9,"nodeType":"667","messageId":"668","endLine":7,"endColumn":16},{"ruleId":"665","severity":1,"message":"716","line":1,"column":10,"nodeType":"667","messageId":"668","endLine":1,"endColumn":20},{"ruleId":"665","severity":1,"message":"717","line":1,"column":22,"nodeType":"667","messageId":"668","endLine":1,"endColumn":29},{"ruleId":"665","severity":1,"message":"718","line":1,"column":31,"nodeType":"667","messageId":"668","endLine":1,"endColumn":37},{"ruleId":"665","severity":1,"message":"719","line":5,"column":8,"nodeType":"667","messageId":"668","endLine":5,"endColumn":24},{"ruleId":"665","severity":1,"message":"720","line":6,"column":8,"nodeType":"667","messageId":"668","endLine":6,"endColumn":17},{"ruleId":"665","severity":1,"message":"721","line":9,"column":10,"nodeType":"667","messageId":"668","endLine":9,"endColumn":31},{"ruleId":"665","severity":1,"message":"722","line":10,"column":8,"nodeType":"667","messageId":"668","endLine":10,"endColumn":17},{"ruleId":"723","severity":1,"message":"724","line":59,"column":15,"nodeType":"690","endLine":59,"endColumn":18},{"ruleId":"723","severity":1,"message":"724","line":62,"column":15,"nodeType":"690","endLine":62,"endColumn":18},{"ruleId":"723","severity":1,"message":"724","line":65,"column":15,"nodeType":"690","endLine":65,"endColumn":18},{"ruleId":"723","severity":1,"message":"724","line":68,"column":15,"nodeType":"690","endLine":68,"endColumn":18},{"ruleId":"723","severity":1,"message":"724","line":78,"column":15,"nodeType":"690","endLine":78,"endColumn":18},{"ruleId":"723","severity":1,"message":"724","line":81,"column":15,"nodeType":"690","endLine":81,"endColumn":18},{"ruleId":"723","severity":1,"message":"724","line":84,"column":15,"nodeType":"690","endLine":84,"endColumn":18},{"ruleId":"723","severity":1,"message":"724","line":87,"column":15,"nodeType":"690","endLine":87,"endColumn":18},{"ruleId":"723","severity":1,"message":"724","line":123,"column":17,"nodeType":"690","endLine":129,"endColumn":18},{"ruleId":"665","severity":1,"message":"725","line":4,"column":28,"nodeType":"667","messageId":"668","endLine":4,"endColumn":33},{"ruleId":"665","severity":1,"message":"680","line":16,"column":9,"nodeType":"667","messageId":"668","endLine":16,"endColumn":16},{"ruleId":"661","severity":1,"message":"726","line":22,"column":6,"nodeType":"663","endLine":22,"endColumn":8,"suggestions":"727"},{"ruleId":"710","severity":1,"message":"711","line":38,"column":79,"nodeType":"690","endLine":38,"endColumn":135},{"ruleId":"710","severity":1,"message":"711","line":38,"column":138,"nodeType":"690","endLine":38,"endColumn":160},{"ruleId":"661","severity":1,"message":"728","line":25,"column":6,"nodeType":"663","endLine":25,"endColumn":8,"suggestions":"729"},{"ruleId":"710","severity":1,"message":"711","line":56,"column":19,"nodeType":"690","endLine":56,"endColumn":79},{"ruleId":"665","severity":1,"message":"706","line":5,"column":51,"nodeType":"667","messageId":"668","endLine":5,"endColumn":57},{"ruleId":"665","severity":1,"message":"730","line":10,"column":8,"nodeType":"667","messageId":"668","endLine":10,"endColumn":23},{"ruleId":"665","severity":1,"message":"680","line":19,"column":9,"nodeType":"667","messageId":"668","endLine":19,"endColumn":16},{"ruleId":"661","severity":1,"message":"731","line":24,"column":6,"nodeType":"663","endLine":24,"endColumn":8,"suggestions":"732"},{"ruleId":"710","severity":1,"message":"711","line":40,"column":78,"nodeType":"690","endLine":40,"endColumn":133},{"ruleId":"710","severity":1,"message":"711","line":40,"column":136,"nodeType":"690","endLine":40,"endColumn":158},{"ruleId":"665","severity":1,"message":"725","line":7,"column":33,"nodeType":"667","messageId":"668","endLine":7,"endColumn":38},{"ruleId":"661","severity":1,"message":"733","line":18,"column":6,"nodeType":"663","endLine":18,"endColumn":8,"suggestions":"734"},{"ruleId":"665","severity":1,"message":"735","line":3,"column":91,"nodeType":"667","messageId":"668","endLine":3,"endColumn":100},{"ruleId":"665","severity":1,"message":"680","line":25,"column":9,"nodeType":"667","messageId":"668","endLine":25,"endColumn":16},{"ruleId":"665","severity":1,"message":"680","line":10,"column":9,"nodeType":"667","messageId":"668","endLine":10,"endColumn":16},{"ruleId":"710","severity":1,"message":"711","line":13,"column":7,"nodeType":"690","endLine":13,"endColumn":43},{"ruleId":"710","severity":1,"message":"711","line":8,"column":9,"nodeType":"690","endLine":8,"endColumn":82},{"ruleId":"657","replacedBy":"736"},{"ruleId":"659","replacedBy":"737"},{"ruleId":"657","replacedBy":"738"},{"ruleId":"659","replacedBy":"739"},{"ruleId":"665","severity":1,"message":"720","line":3,"column":8,"nodeType":"667","messageId":"668","endLine":3,"endColumn":17},{"ruleId":"710","severity":1,"message":"711","line":25,"column":11,"nodeType":"690","endLine":25,"endColumn":36},{"ruleId":"661","severity":1,"message":"691","line":14,"column":6,"nodeType":"663","endLine":14,"endColumn":8,"suggestions":"740"},{"ruleId":"657","replacedBy":"741"},{"ruleId":"659","replacedBy":"742"},{"ruleId":"665","severity":1,"message":"718","line":2,"column":10,"nodeType":"667","messageId":"668","endLine":2,"endColumn":16},{"ruleId":"665","severity":1,"message":"743","line":11,"column":8,"nodeType":"667","messageId":"668","endLine":11,"endColumn":17},{"ruleId":"665","severity":1,"message":"744","line":14,"column":8,"nodeType":"667","messageId":"668","endLine":14,"endColumn":19},{"ruleId":"665","severity":1,"message":"745","line":15,"column":11,"nodeType":"667","messageId":"668","endLine":15,"endColumn":21},{"ruleId":"661","severity":1,"message":"726","line":29,"column":6,"nodeType":"663","endLine":29,"endColumn":8,"suggestions":"746"},{"ruleId":"661","severity":1,"message":"747","line":36,"column":6,"nodeType":"663","endLine":36,"endColumn":8,"suggestions":"748"},{"ruleId":"661","severity":1,"message":"749","line":25,"column":6,"nodeType":"663","endLine":25,"endColumn":8,"suggestions":"750"},{"ruleId":"661","severity":1,"message":"747","line":31,"column":6,"nodeType":"663","endLine":31,"endColumn":8,"suggestions":"751"},{"ruleId":"661","severity":1,"message":"752","line":26,"column":6,"nodeType":"663","endLine":26,"endColumn":8,"suggestions":"753"},{"ruleId":"665","severity":1,"message":"754","line":9,"column":40,"nodeType":"667","messageId":"668","endLine":9,"endColumn":44},{"ruleId":"661","severity":1,"message":"755","line":24,"column":6,"nodeType":"663","endLine":24,"endColumn":8,"suggestions":"756"},{"ruleId":"661","severity":1,"message":"757","line":44,"column":6,"nodeType":"663","endLine":44,"endColumn":8,"suggestions":"758"},{"ruleId":"661","severity":1,"message":"759","line":24,"column":6,"nodeType":"663","endLine":24,"endColumn":8,"suggestions":"760"},{"ruleId":"665","severity":1,"message":"761","line":1,"column":17,"nodeType":"667","messageId":"668","endLine":1,"endColumn":25},{"ruleId":"665","severity":1,"message":"707","line":7,"column":92,"nodeType":"667","messageId":"668","endLine":7,"endColumn":103},{"ruleId":"665","severity":1,"message":"762","line":18,"column":11,"nodeType":"667","messageId":"668","endLine":18,"endColumn":19},{"ruleId":"710","severity":1,"message":"711","line":13,"column":7,"nodeType":"690","endLine":13,"endColumn":65},{"ruleId":"665","severity":1,"message":"763","line":42,"column":15,"nodeType":"667","messageId":"668","endLine":42,"endColumn":22},{"ruleId":"661","severity":1,"message":"764","line":16,"column":6,"nodeType":"663","endLine":16,"endColumn":8,"suggestions":"765"},{"ruleId":"665","severity":1,"message":"762","line":18,"column":11,"nodeType":"667","messageId":"668","endLine":18,"endColumn":19},{"ruleId":"665","severity":1,"message":"766","line":2,"column":10,"nodeType":"667","messageId":"668","endLine":2,"endColumn":15},{"ruleId":"665","severity":1,"message":"716","line":2,"column":17,"nodeType":"667","messageId":"668","endLine":2,"endColumn":27},{"ruleId":"665","severity":1,"message":"767","line":2,"column":29,"nodeType":"667","messageId":"668","endLine":2,"endColumn":43},{"ruleId":"665","severity":1,"message":"700","line":2,"column":45,"nodeType":"667","messageId":"668","endLine":2,"endColumn":56},{"ruleId":"665","severity":1,"message":"701","line":2,"column":58,"nodeType":"667","messageId":"668","endLine":2,"endColumn":68},{"ruleId":"665","severity":1,"message":"768","line":19,"column":10,"nodeType":"667","messageId":"668","endLine":19,"endColumn":20},{"ruleId":"665","severity":1,"message":"769","line":19,"column":22,"nodeType":"667","messageId":"668","endLine":19,"endColumn":35},{"ruleId":"665","severity":1,"message":"693","line":23,"column":27,"nodeType":"667","messageId":"668","endLine":23,"endColumn":45},{"ruleId":"661","severity":1,"message":"770","line":27,"column":6,"nodeType":"663","endLine":27,"endColumn":14,"suggestions":"771"},{"ruleId":"657","replacedBy":"772"},{"ruleId":"659","replacedBy":"773"},{"ruleId":"661","severity":1,"message":"774","line":24,"column":6,"nodeType":"663","endLine":24,"endColumn":8,"suggestions":"775"},{"ruleId":"776","severity":1,"message":"696","line":3,"column":21,"nodeType":"667","messageId":"668","endLine":3,"endColumn":37},{"ruleId":"661","severity":1,"message":"777","line":13,"column":10,"nodeType":"663","endLine":13,"endColumn":12,"suggestions":"778"},{"ruleId":"657","replacedBy":"658"},{"ruleId":"659","replacedBy":"660"},{"ruleId":"776","severity":1,"message":"699","line":1,"column":34,"nodeType":"667","messageId":"668","endLine":1,"endColumn":40},{"ruleId":"776","severity":1,"message":"779","line":6,"column":19,"nodeType":"667","messageId":"668","endLine":6,"endColumn":24},{"ruleId":"661","severity":1,"message":"780","line":14,"column":7,"nodeType":"663","endLine":14,"endColumn":9,"suggestions":"781"},{"ruleId":"776","severity":1,"message":"725","line":11,"column":70,"nodeType":"667","messageId":"668","endLine":11,"endColumn":75},{"ruleId":"661","severity":1,"message":"691","line":26,"column":10,"nodeType":"663","endLine":26,"endColumn":12,"suggestions":"782"},{"ruleId":"776","severity":1,"message":"725","line":2,"column":70,"nodeType":"667","messageId":"668","endLine":2,"endColumn":75},{"ruleId":"661","severity":1,"message":"691","line":25,"column":6,"nodeType":"663","endLine":25,"endColumn":8,"suggestions":"783"},{"ruleId":"702","severity":1,"message":"784","line":35,"column":25,"nodeType":"704","messageId":"785","endLine":35,"endColumn":27},"no-native-reassign",["786"],"no-negated-in-lhs",["787"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initAppResources'. Either include it or remove the dependency array.","ArrayExpression",["788"],"@typescript-eslint/no-unused-vars","'Unauthorized' is defined but never used.","Identifier","unusedVar","'AdminSwitch' is defined but never used.","'MainSwitch' is defined but never used.","'ProfileLayout' is defined but never used.","'Router' is defined but never used.","'getAccessToken' is defined but never used.","'getRoles' is defined but never used.","'AlertType' is defined but never used.","'alertContext' is assigned a value but never used.",["786"],["787"],"'createMuiTheme' is defined but never used.","'classes' is assigned a value but never used.","'context' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkReservationOwner'. Either include it or remove the dependency array.",["789"],"'res' is assigned a value but never used.","'API_URL' is defined but never used.","'menuCollapseRef' is assigned a value but never used.","'onRedirect' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getReservations'. Either include it or remove the dependency array.",["790"],"'setElementsPerPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getWorkshops' and 'query.q'. Either include them or remove the dependency array.",["791"],"'CircularProgress' is defined but never used.",["792"],"'loading' is assigned a value but never used.","'useRef' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Avatar' is defined but never used.","'CssBaseline' is defined but never used.","React Hook useEffect has a missing dependency: 'getNewPassForm'. Either include it or remove the dependency array.",["793"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'Banner' is defined but never used.","'IconButton' is defined but never used.","'Toolbar' is defined but never used.","'Button' is defined but never used.","'HomeOutlinedIcon' is defined but never used.","'useStyles' is defined but never used.","'AccountCircleOutlined' is defined but never used.","'SearchBar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Paper' is defined but never used.","React Hook useEffect has a missing dependency: 'getWorkshop'. Either include it or remove the dependency array.",["794"],"React Hook useEffect has missing dependencies: 'getReservationDetails' and 'isReservationOwned'. Either include them or remove the dependency array.",["795"],"'BrokenImageIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getMachineDetails'. Either include it or remove the dependency array.",["796"],"React Hook useEffect has a missing dependency: 'getLabDetails'. Either include it or remove the dependency array.",["797"],"'TextField' is defined but never used.",["786"],["787"],["786"],["787"],["798"],["786"],["787"],"'ReCAPTCHA' is defined but never used.","'customAxios' is defined but never used.","'EmpContact' is defined but never used.",["799"],"React Hook useEffect has a missing dependency: 'getFormData'. Either include it or remove the dependency array.",["800"],"React Hook useEffect has a missing dependency: 'getWorkshopType'. Either include it or remove the dependency array.",["801"],["802"],"React Hook useEffect has a missing dependency: 'getLab'. Either include it or remove the dependency array.",["803"],"'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'getGuest'. Either include it or remove the dependency array.",["804"],"React Hook useEffect has a missing dependency: 'getEmp'. Either include it or remove the dependency array.",["805"],"React Hook useEffect has a missing dependency: 'getDepartment'. Either include it or remove the dependency array.",["806"],"'useState' is defined but never used.","'response' is assigned a value but never used.","'onClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLabs'. Either include it or remove the dependency array.",["807"],"'Input' is defined but never used.","'InputAdornment' is defined but never used.","'nameSearch' is assigned a value but never used.","'setNameSearch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getResources'. Either include it or remove the dependency array.",["808"],["786"],["787"],"React Hook useEffect has a missing dependency: 'getDegree'. Either include it or remove the dependency array.",["809"],"no-unused-vars","React Hook useEffect has a missing dependency: 'formatReservations'. Either include it or remove the dependency array.",["810"],"'Views' is defined but never used.","React Hook useEffect has a missing dependency: 'getCalendarData'. Either include it or remove the dependency array.",["811"],["812"],["813"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"814","fix":"815"},{"desc":"816","fix":"817"},{"desc":"818","fix":"819"},{"desc":"820","fix":"821"},{"desc":"820","fix":"822"},{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"831","fix":"832"},{"desc":"818","fix":"833"},{"desc":"825","fix":"834"},{"desc":"835","fix":"836"},{"desc":"837","fix":"838"},{"desc":"835","fix":"839"},{"desc":"840","fix":"841"},{"desc":"842","fix":"843"},{"desc":"844","fix":"845"},{"desc":"846","fix":"847"},{"desc":"848","fix":"849"},{"desc":"850","fix":"851"},{"desc":"852","fix":"853"},{"desc":"854","fix":"855"},{"desc":"856","fix":"857"},{"desc":"818","fix":"858"},{"desc":"818","fix":"859"},"Update the dependencies array to be: [initAppResources]",{"range":"860","text":"861"},"Update the dependencies array to be: [checkReservationOwner]",{"range":"862","text":"863"},"Update the dependencies array to be: [getReservations]",{"range":"864","text":"865"},"Update the dependencies array to be: [getWorkshops, query.q, search]",{"range":"866","text":"867"},{"range":"868","text":"867"},"Update the dependencies array to be: [getNewPassForm]",{"range":"869","text":"870"},"Update the dependencies array to be: [getWorkshop]",{"range":"871","text":"872"},"Update the dependencies array to be: [getReservationDetails, isReservationOwned]",{"range":"873","text":"874"},"Update the dependencies array to be: [getMachineDetails]",{"range":"875","text":"876"},"Update the dependencies array to be: [getLabDetails]",{"range":"877","text":"878"},{"range":"879","text":"865"},{"range":"880","text":"872"},"Update the dependencies array to be: [getFormData]",{"range":"881","text":"882"},"Update the dependencies array to be: [getWorkshopType]",{"range":"883","text":"884"},{"range":"885","text":"882"},"Update the dependencies array to be: [getLab]",{"range":"886","text":"887"},"Update the dependencies array to be: [getGuest]",{"range":"888","text":"889"},"Update the dependencies array to be: [getEmp]",{"range":"890","text":"891"},"Update the dependencies array to be: [getDepartment]",{"range":"892","text":"893"},"Update the dependencies array to be: [getLabs]",{"range":"894","text":"895"},"Update the dependencies array to be: [getResources, search]",{"range":"896","text":"897"},"Update the dependencies array to be: [getDegree]",{"range":"898","text":"899"},"Update the dependencies array to be: [formatReservations]",{"range":"900","text":"901"},"Update the dependencies array to be: [getCalendarData]",{"range":"902","text":"903"},{"range":"904","text":"865"},{"range":"905","text":"865"},[424,426],"[initAppResources]",[767,769],"[checkReservationOwner]",[890,892],"[getReservations]",[1168,1176],"[getWorkshops, query.q, search]",[1178,1186],[956,958],"[getNewPassForm]",[1096,1098],"[getWorkshop]",[1041,1043],"[getReservationDetails, isReservationOwned]",[1081,1083],"[getMachineDetails]",[748,750],"[getLabDetails]",[595,597],[1223,1225],[2036,2038],"[getFormData]",[1265,1267],"[getWorkshopType]",[1795,1797],[1341,1343],"[getLab]",[1303,1305],"[getGuest]",[1710,1712],"[getEmp]",[1237,1239],"[getDepartment]",[772,774],"[getLabs]",[1090,1098],"[getResources, search]",[1191,1193],"[getDegree]",[557,559],"[formatReservations]",[623,625],"[getCalendarData]",[1271,1273],[1183,1185]]